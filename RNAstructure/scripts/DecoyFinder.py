#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jun 17 22:29:45 2021

@author: mingyi
"""
"""print out on the screen"""




import os
import subprocess
import numpy as np
from math import log
from math import sqrt
from math import floor
import fnmatch
from sklearn.ensemble import AdaBoostClassifier
from joblib import dump,load 

my_env = os.environ.copy()
my_env['PATH']=os.getenv('PATH')
my_env['DATAPATH']=os.getenv('DATAPATH')
Adaclassifer_model = load(my_env['DATAPATH']+'/DecoyFinder_Model.sklearn')


def find(pattern, path):
    '''This function will find all file with a pattern under the directory'''
    result = []
    for root, dirs, files in os.walk(path):
        for name in files:
            if fnmatch.fnmatch(name, pattern):
                result.append(os.path.join(root, name))
    return result



def get_probability_data(file_path, inc_pairs=True, convert=True):
    """
    Function: get_probability_data

    This function returns a list of base pair probabilities that are read in from a pair
    probability file (a *.pp file).

    Args:
        file_path:  A file path to the .pp file with the base pair probabilities

    Returns:
        p_array:    The list of pair probabilities.
    """
    # Initialize the probability information    
    output_array = []
    
    # Open the pair probability file
    pfile = open(file_path,'r')
   
    # Read the whole parameter file into the varialble plines
    # plines is a list of each line of the file
    plines = pfile.readlines()
    
    # Close the file
    pfile.close()
    
    # Skip the first two lines of the file
    for line in plines[2:]:
        # Split the line into 'words'
        values=line.split()
        
        # Extract the probability data and convert it if specified
        if convert:
            prob=10**(-1*float(values[2]))
        else:
            prob=float(values[2])
            
        # Append the probability information
        if inc_pairs:
            output_array.append([(int(values[0]),int(values[1])),prob])
        else:
            output_array.append(prob)
       
    # Return the probability information            
    return output_array, plines[:2]


class PP_Obj:
          """
          """
          def __init__(self,pp_path=None,i=None,save_pp = None):
              self.pp_matrix = None
              self.length = None
              
              if pp_path:
                  if pp_path[-4:]=='.pfs':
                      if save_pp:
                          self.import_pfs_file(pp_path,save_pp)
                      else:
                          self.import_pfs_file(pp_path)
                  else:
                      self.import_pp_file(pp_path)
          
          def import_pp_file(self, pp_path):
              pair_prob, header = get_probability_data(pp_path)
              
              # Extract the sequence length from the header
              self.length = int(header[0])
              
              # Initialize arrays
      
      #        self.pp_matrix = np.array([[0. for _ in range(self.length+1)] for __ in range(self.length+1)])
              self.pp_matrix = np.zeros((self.length+1, self.length+1))
              
              # Copy each pair probability to a matrix
              for info in pair_prob:
                  # info[0] contains a tuple with pair identity (i,j), info[1] contains the pairing probability
                  self.pp_matrix[info[0][0],info[0][1]] = info[1]
              
              # RemoveTurbo_path1 unneeded variables    
                  del info
              
             
        
          def import_pfs_file(self, pfs_path,save_pp=None):
              #my_env = os.environ.copy()
              try:
                  output=subprocess.check_output(['which', 'ProbabilityPlot'], env=my_env)
              except:
                  print('ProbabilityPlot not found in PATH, using default')
                  my_env['PATH']='/home/mzhu/RNAstructure/exe:'+my_env['PATH']
       #           raise
              if 'DATAPATH' not in my_env.keys():
                  print('DATAPATH not defined, using default')
                  my_env['DATAPATH']='/home/mzhu/RNAstructure/data_tables'
       #           raiseTurbo_path1
              
              
              if save_pp:
                  pfs_path_dir = os.path.dirname(pfs_path)
                  pfs_path_name = (os.path.basename(pfs_path)).split('.')
                  pfs_path_name[-1] = 'pp'
                  pfs_path_name = ('.').join(pfs_path_name)
                  subprocess.call(['ProbabilityPlot',pfs_path,pfs_path_dir+'/'+pfs_path_name,'--text'],env=my_env)
              else:
                  subprocess.call(['ProbabilityPlot',pfs_path,'foo.pp','--text'],env=my_env)
                  self.import_pp_file('foo.pp')
                  os.remove('foo.pp')
          
          def prob_up(self, index):
              return sum(self.pp_matrix[:,index])
          
          def prob_down(self, index):
              return sum(self.pp_matrix[index,:])
          
          def unpair(self, index):
              return 1 - sum(self.pp_matrix[:,index]) - sum(self.pp_matrix[index,:])
          
          def sh_entropy(self):
              entropy = 0
              sequence_length = len(self.pp_matrix)-1
              for i in range(len(self.pp_matrix)):
                  for b in range(len(self.pp_matrix[i])):
                      if self.pp_matrix[i][b] != 0:
                          probability = self.pp_matrix[i][b]
                          probability_log = np.log10(probability)
                          entropy += -(probability*probability_log)
              entropy = entropy/sequence_length
            
              return entropy
          
def aligment_shannon_entropy(algn_file = None):
    '''input: aligment file
       calculate the aligment shannon entropy
    '''
    
    out_aln_dict = dict()
    out_entropy = dict()
    
    out_aln_open = open(algn_file,"r").readlines()
    for line in out_aln_open:
                Oneline=line.split()
        
            
                if len(Oneline)!=2:
                    continue
            
                name= Oneline[0]
                
                nucleotide = [l for l in Oneline[1].split()[0]]
                if name in out_aln_dict.keys():
                    out_aln_dict[name] += nucleotide
                else:
                    out_aln_dict[name] = nucleotide
                    
    nucleotide_list = [i for i in out_aln_dict.values()]
    nucleotide_name = [i for i in out_aln_dict.keys()]
    Position_probability = [ 0 for i in nucleotide_list[0]]
    
    for i in range(len(nucleotide_list[0])):
        A = 0
        U = 0
        C = 0
        G = 0 
        gap = 0
        for b in range(len(nucleotide_list)):
            if nucleotide_list[b][i] == 'A':
                A +=1
            elif nucleotide_list[b][i] == 'U':
                U +=1
            elif nucleotide_list[b][i] == 'C':
                C +=1
            elif nucleotide_list[b][i] == 'G':
                G +=1
            elif nucleotide_list[b][i] == '-':
                gap +=1
                
        Position_probability[i] = ({'A':A/len(nucleotide_list),'U':U/len(nucleotide_list),'C':C/len(nucleotide_list),'G':G/len(nucleotide_list),'-':gap/len(nucleotide_list)})
            
        
    for i in nucleotide_name:     
        list_of_sequence = out_aln_dict[i]
        out_entropy_map = [ 0 for i in nucleotide_list[0]]
        for b in range(len(list_of_sequence)):
            try:
                out_entropy_map[b] += -(Position_probability[b][list_of_sequence[b]]*(log(Position_probability[b][list_of_sequence[b]])))
            except:
                out_entropy_map[b] += 0
        out_entro = sum(out_entropy_map)/len(out_entropy_map)
        out_entropy[i]=out_entro 

        
    return out_entropy


class DecoyFinder:
    """This class can use config file of TurboFold, and run it if it haven't been runned, then identify if there is a decoy sequence in the set of sequence in TurboFold
    Argument:
             conf_file: the path for the config file of TurboFold
             smp:only been used when TurboFold is not runed and will run in parallel
             FPR: 1- specificity or false positivie rate, user can set and default is 0.5
             Features order, includes KLscore, Z_score, aligment shann, individual shann,default shann,difference shann 
             
    Returns:  decoy sequence """
    def __init__(self, conf_file=None,smp = None,FPR = None):
        self.Seqname_dict=dict()#name dictionary
        self.probabilities=dict()#base pair probailites
        self.algn=dict()#Sequence aligment
        self.algn_to_Seqname_file = dict()# a dictionary of number of file to name of seqeunces to get alignment information
        self.alpha_1 = dict()#PS Score
        self.alpha_2 = dict()#US Score
        self.Z_value = dict()#Z_value dictionary will be used to calculate KLscore
        self.heatmap = dict()#heatmap data just call the sequence name, it will show heatmap data for each sequence
        self.efn2 =dict()#store folding free energy
        #threshold for adjust the classifiers,the default been used 
        self.threshold = [1.302873784203312, 0.30287378420331207, 0.2622720158765613, 0.2474492550557813, 0.24471649536886253, 0.2394908551779426, 0.23378415191603985, 0.23220290258042442, 0.2301064875378373, 0.22820597541963394, 0.22791156627696213, 0.21545157471158022, 0.2043189701976244, 0.19888915398175294, 0.19568609982127266, 0.18780451899095063, 0.18663618886440958, 0.18613702516578312, 0.184717600214457, 0.18308946111435087, 0.18025612945038127, 0.17985330985949055, 0.17920919651543554, 0.1782217055552971, 0.17659835491841203, 0.17484987351539033, 0.1739999185518885, 0.17268726560995307, 0.17241665032685805, 0.17196197967762028, 0.1718398804596843, 0.17159158149912973, 0.1703776552266278, 0.16833971635235956, 0.16410878022402547, 0.16372239207865963, 0.16273717301060536, 0.1622770532890977, 0.16151531610160302, 0.15972973274184504, 0.15813196267651508, 0.15597737859291383, 0.15415549745127322, 0.15403746569013704, 0.15366092333805847, 0.1524375123203509, 0.15093930801250027, 0.15081555475323394, 0.14393879899052853, 0.14333877475789025, 0.14305494365220395, 0.142775840297293, 0.14103801619356815, 0.13848147016789536, 0.13751950546530545, 0.1370351088185549, 0.13691186312676557, 0.1363133805164879, 0.13352822222493416, 0.13352162343432666, 0.13173526673556246, 0.1313602784814305, 0.1306694776787392, 0.12995271537281194, 0.12986398099544916, 0.1291207258524732, 0.12842317338296777, 0.12711029138600466, 0.1267762742868715, 0.1264205352219963, 0.12607859166992325, 0.12493336685030587, 0.12395344873670433, 0.12350707902783575, 0.12274553939331839, 0.12179567247959883, 0.12169860645837255, 0.12163484436554767, 0.12088113825351254, 0.12058161669679762, 0.12026359979334239, 0.11966617814160779, 0.11954723854349925, 0.1193652779002588, 0.11929418627228366, 0.11887070378704401, 0.11853668668791084, 0.1164205447325099, 0.11642045337001333, 0.11631442436382089, 0.11523614667756743, 0.11450595179435785, 0.11348960423075344, 0.11247352347759304, 0.11167804912302925, 0.11069283005497454, 0.10865769849266038, 0.10826897056174556, 0.10804349201355273, 0.1078388762999507, 0.10756163652694833, 0.10732099801506789, 0.10699655907860683, 0.10624506732245509, 0.10451260788007788, 0.10432390175016398, 0.1014108650846755, 0.10113493740785406, 0.10041811089369984, 0.10039316936472026, 0.1002170902508141, 0.09980390441459197, 0.09979497204238363, 0.09975259778009332, 0.09888774677149492, 0.09877121179760345, 0.09872304661877396, 0.09845536042503511, 0.0981940838424123, 0.09772427886265767, 0.09732166905275064, 0.09697908428152469, 0.09671465368549376, 0.0966481872275749, 0.09631016193057557, 0.09373223826260402, 0.09362978187627974, 0.09334164818337432, 0.09288458729514665, 0.09118491771535148, 0.0905316241986428, 0.08985005764954529, 0.08874299405035474, 0.0870931916410903, 0.08650859018981466, 0.08646098040545475, 0.08643712721226487, 0.08612415937433232, 0.08549265066364337, 0.08481147913107207, 0.08473196459431886, 0.08433166565411582, 0.0830548442032989, 0.08305038007251325, 0.08238337062043039, 0.08184638291412322, 0.08172601649053413, 0.08143894977052224, 0.08114301033476523, 0.07991595975843807, 0.07940979353270555, 0.07931593552579985, 0.0792984988112162, 0.07826900259085395, 0.07710928049130178, 0.07710813699903579, 0.07708497902582301, 0.07708489442774463, 0.07704375616089315, 0.07631883926089605, 0.07631163585506878, 0.07397293907058455, 0.07390185311583031, 0.0737439888607827, 0.07298772000253012, 0.07239114426132448, 0.07221713886869086, 0.07210584414720134, 0.0712056469387885, 0.0710763479268392, 0.0694240723374892, 0.06938376579714794, 0.06937963812097969, 0.06884539142686236, 0.06877282381062483, 0.06868682095455253, 0.06847069876325756, 0.0680792516619354, 0.06740128309000254, 0.06586331499649073, 0.06499851853937122, 0.0645228367151987, 0.06441248281998924, 0.06437620177687953, 0.06422697347280065, 0.06332110273388608, 0.06329982911594234, 0.06271300706861227, 0.06268805931227589, 0.06245910910247393, 0.062345912179499974, 0.06155488291701905, 0.06075025037259063, 0.06053323621166412, 0.05936982783817163, 0.059011099606150585, 0.05896447281321687, 0.05888918916204089, 0.058310425476759686, 0.058190059053170595, 0.058121345422584236, 0.05785610091570653, 0.05739966930415974, 0.05733018205118384, 0.057110181443995434, 0.05687192443868194, 0.05628324911623811, 0.05602654232359133, 0.055298030048183844, 0.0540982679805001, 0.05409556206679267, 0.0538549792220433, 0.053377204282169466, 0.05324448811549065, 0.052597563936396474, 0.05192904432952633, 0.05177689749455755, 0.05121663981730884, 0.05106103242119131, 0.05092960810645575, 0.05050917097557611, 0.04967374707396327, 0.04912322348150605, 0.0490905944522233, 0.048538235630492255, 0.04838172400354879, 0.048032899003530805, 0.047792316158781434, 0.04763580819969504, 0.047036413307217306, 0.04672719432487832, 0.04658887526474925, 0.046572042522593005, 0.046076647044182906, 0.04586638126626452, 0.04585347824810565, 0.04584368068361616, 0.045603097838866624, 0.044934741325894034, 0.044867731669836874, 0.04414206571567858, 0.04410749335319003, 0.044104924066220186, 0.04368661040931643, 0.04342350144119134, 0.043299305543490874, 0.042832469425212516, 0.04255209082754252, 0.041441150609621336, 0.04138187526355347, 0.04134558096647739, 0.040840244339515996, 0.040656209309395175, 0.040652081633226866, 0.040323372296872495, 0.040112883466166704, 0.04001042707984226, 0.03867372660224966, 0.03855420879656368, 0.038430070483353895, 0.038254730932539116, 0.03807940265241683, 0.037805714693914694, 0.03746849689768761, 0.03723664248022901, 0.03679080023483483, 0.036671082213921125, 0.03637020248603523, 0.03606441198635296, 0.03602176724519862, 0.03590247811671804, 0.035625296776316595, 0.034398043158991864, 0.033371237874394666, 0.03314228766459293, 0.033043975991150776, 0.03288923539337729, 0.032021737456539134, 0.03178660668304856, 0.0311398002596176, 0.03111620758739042, 0.03028354311839787, 0.030168183713914665, 0.029959104181936758, 0.029942271439780566, 0.029792793552428032, 0.02977364100115698, 0.029566127094954042, 0.028854037627573714, 0.027504564896002615, 0.027475152983407858, 0.02740089158211856, 0.027356667940623358, 0.02717918406221037, 0.026189089243417563, 0.026139627712861657, 0.026100906375957134, 0.02581662578408861, 0.025790438736268295, 0.025568092686593213, 0.025553613207048576, 0.025233612576888276, 0.02522112072517052, 0.02506493753567096, 0.02487565994599622, 0.02464964779441664, 0.024527949829363904, 0.02452115975164737, 0.02424141671271951, 0.024120516685763094, 0.024012842538327694, 0.02392398184025829, 0.023921135519009096, 0.023211577328040744, 0.023135421416342283, 0.022991120595097392, 0.022771972696206177, 0.022766449517921894, 0.022647160389441312, 0.021928596114954013, 0.021744210983310364, 0.021385188940722055, 0.02094619058621061, 0.020943377046899525, 0.02029212081749282, 0.02024083580416436, 0.020014808129966755, 0.019446128648636096, 0.019117080341662707, 0.01890825171194227, 0.018629333432376105, 0.018385685930551676, 0.018373576354101806, 0.01814671948511848, 0.017861318776996482, 0.017722388145279322, 0.01757154500699276, 0.01733529516534904, 0.017328505087632673, 0.017116124195863502, 0.01709159908374175, 0.016994024977927735, 0.01698153312620987, 0.016928176977446863, 0.016728480854994232, 0.016636072347035513, 0.016164207718253998, 0.016130283532657663, 0.015836942385154318, 0.015681547920048555, 0.01565944648496137, 0.015107547391323473, 0.014783283599166142, 0.01351379113072615, 0.013210043970643626, 0.01271359412186851, 0.012582315755200968, 0.012467741644666575, 0.012140582878101658, 0.012070872387452358, 0.012039358450226412, 0.011903480147239298, 0.01150084380426225, 0.01086376142728468, 0.010771120499306064, 0.01066866411298173, 0.010549412979398043, 0.010173732995101714, 0.010107944958286819, 0.010081599005598685, 0.009701747937448824, 0.009592698775194974, 0.00944152149159605, 0.008544984821950763, 0.00850908599247635, 0.008501385107751447, 0.008488893256033692, 0.008427172045867293, 0.008365139996767357, 0.008260802263001854, 0.008003486889195388, 0.007778889618070606, 0.007716643914674082, 0.007371456474470017, 0.007000681063647762, 0.006814072610512867, 0.006614907521147295, 0.006507045947682588, 0.006077919814839794, 0.006077002466953585, 0.0058010919618075585, 0.005706111465705488, 0.0056704866712392055, 0.005548039690591922, 0.005495911051673463, 0.005055340005960529, 0.0050300695320077415, 0.004874562545217842, 0.004688263368368251, 0.004316419503398061, 0.004076864201214558, 0.0036413304334224073, 0.003175491239424233, 0.003013098524112412, 0.0029356086994071218, 0.0029061840772697245, 0.002653131806054143, 0.0025315329003455234, 0.0024041287576846426, 0.0022919775981620205, 0.0022784806291298865, 0.002118813483147186, 0.001814351638967926, 0.001316431328461487, 0.0012618528138462204, 0.001231547694184043, 0.0012091080672726462, 0.0009919923920005402, 0.0007514095472510585, 0.0007284131850726627, 0.00047536091385702584, 0.00012555239780670524, 4.529680358134058e-05, 3.3538837174940106e-05, 6.301264222907665e-06, -0.00026744546107287936, -0.0005448137716715928, -0.0006524879191070476, -0.0009572016250811721, -0.0009889366192540328, -0.001491958806528526, -0.0017238940190983376, -0.0017325416512780634, -0.0022343057350993067, -0.0025622488964193724, -0.00269154790836873, -0.00294425241687285, -0.0031526737234432445, -0.0032408628182603594, -0.0032899068979733714, -0.003767257926681755, -0.00399894413671581, -0.004002884027294651, -0.004199606658388977, -0.00426448582447031, -0.004532312614419831, -0.004607039801989676, -0.005009373399575967, -0.005021312211623108, -0.005109653765673738, -0.0053171486307520555, -0.005424853088349779, -0.005586455792906453, -0.005895556061555118, -0.005961106969830765, -0.0062266922117769075, -0.00644124511676375, -0.0064959256049648695, -0.007030479531688005, -0.0080115788148295, -0.00801245894681879, -0.008481485805580447, -0.008507033060033586, -0.008620985438507756, -0.00903241629661894, -0.009059391881764634, -0.009492252128088019, -0.009833493249636949, -0.009932744387120773, -0.010433517482275223, -0.010473893334059847, -0.011225044146523366, -0.011392261322403785, -0.011413306320638528, -0.011635957404011132, -0.011657846564349872, -0.01177960841155723, -0.011833168533321947, -0.012302308429688547, -0.012599258154327608, -0.012672196010078629, -0.012826541346503073, -0.01291277885482811, -0.013065081608567286, -0.013221778890101732, -0.013295991951985942, -0.013428012479076601, -0.013911017102940626, -0.013973634194693163, -0.014094435945767425, -0.014116471294687405, -0.01438935758730775, -0.014457082613131167, -0.014668508542590941, -0.01477618269002634, -0.014947856427168393, -0.015286899872804738, -0.015353862310272692, -0.01650421868500579, -0.016826137943643515, -0.017034900629484984, -0.017168336184459454, -0.017407133376179273, -0.01745803762252346, -0.017522509465454528, -0.01764629979663862, -0.017698620467272996, -0.01776309231020412, -0.01813494719259734, -0.0186582816552876, -0.018673105081235764, -0.01882066857156106, -0.01892386689723391, -0.018983365946392328, -0.01949597649679169, -0.01968423867090696, -0.019791912818342472, -0.019893306487142326, -0.02001919601051777, -0.02040673266939169, -0.020557039111055886, -0.020605555174613654, -0.020667277594545008, -0.020838845753288204, -0.020935594209706032, -0.021367740000074686, -0.021633325242020884, -0.021672901032490477, -0.02172972175802762, -0.021913483877239903, -0.022949722483307455, -0.023190305328056993, -0.02321512280438165, -0.023779539742981026, -0.0239058497369547, -0.02435862670803396, -0.02449810401746849, -0.02465069228653821, -0.024692508902576404, -0.025386171831659032, -0.02548050954621195, -0.026663837561206827, -0.026688631160806497, -0.026720241620822593, -0.026929214005556035, -0.027013804697347876, -0.02703644593946275, -0.027265396149264542, -0.02751844842048018, -0.02761382892998615, -0.02773556409575234, -0.027923826269867502, -0.02797614694050171, -0.028031500417303012, -0.028117837700996684, -0.028197614002895388, -0.02835457754612647, -0.028646320268352288, -0.028752991575484166, -0.028796626710016537, -0.028960810525713254, -0.02909140496707341, -0.029175181808666628, -0.029201393370462736, -0.029378268665661567, -0.02944516700621258, -0.02953795550137056, -0.029698219277428217, -0.029863336335162582, -0.030746287078213363, -0.03110369420553183, -0.03223623254904184, -0.032303911552407805, -0.032386020571654406, -0.032501817790987986, -0.03258685142561929, -0.03259821430699461, -0.032721967566260834, -0.032939497010535834, -0.03294820814437671, -0.03314163307980006, -0.03335084448735359, -0.033363340599708025, -0.03408932468073722, -0.03439536000793175, -0.03453975666525616, -0.034560690051071374, -0.03492821875976704, -0.035168801604516575, -0.03518656308868717, -0.03520123999776226, -0.03540827060859503, -0.035643484142849846, -0.035655579633116496, -0.03575803601944083, -0.03585341652894669, -0.0361802466109844, -0.036233496023633016, -0.03630748785968224, -0.03631118529976862, -0.03631879828553347, -0.03648654829484854, -0.0367682562218109, -0.03703149620453672, -0.03748023181714577, -0.03785719610903426, -0.03792531502467106, -0.03793780687638887, -0.038469226025041825, -0.038650917337562984, -0.039006352507509556, -0.03918120162037669, -0.03920144982181262, -0.039212181031517745, -0.03977796184760807, -0.04014086280839141, -0.04026912242462444, -0.04027863620919225, -0.04050716489931, -0.040616094386047186, -0.04086914665726271, -0.04087866044183058, -0.040961555165221375, -0.04116954914244064, -0.04121914049464487, -0.04137136012646181, -0.04138122067876071, -0.04155409783425584, -0.041641264084595175, -0.04186236394300802, -0.041916079592208555, -0.04211028062902461, -0.04234983593120789, -0.042717229422381875, -0.04273287480846871, -0.04293347114460294, -0.0429736318731152, -0.04339606503034371, -0.04342615068764777, -0.0434621681269437, -0.043679202958863406, -0.04389516723207715, -0.04410577689938111, -0.04454063970470867, -0.04467288648116058, -0.044726135893809194, -0.045538692622101085, -0.04556757888574614, -0.045711913319691766, -0.045840465178366596, -0.0463738562843915, -0.04644109332227975, -0.04678444956115968, -0.04696536324269407, -0.04754143498159741, -0.04759163330566463, -0.047675729799535216, -0.04769408969198885, -0.048158742887444095, -0.04841179515865973, -0.04874675249827065, -0.049012337740216794, -0.04910873425622336, -0.049118248040791235, -0.04914513409964211, -0.04923248751548975, -0.04936414079943047, -0.049370952549295466, -0.049458728093605575, -0.04968248376218265, -0.04977839529723138, -0.04986136869721913, -0.049873860548937, -0.04997802436301485, -0.05065482279095851, -0.05068397452356643, -0.050817831359912025, -0.051344578954966746, -0.051640041859013, -0.051743848763174616, -0.051747846283823506, -0.05181633417149967, -0.05191879055782406, -0.052038041691407744, -0.05222905358869778, -0.052387807102253436, -0.05259925874500515, -0.05278214878301829, -0.05281471411437866, -0.05286326710644551, -0.052867945249186254, -0.05299475589561081, -0.05303327957488474, -0.05311631937766109, -0.05460659185205019, -0.05460667934040042, -0.054859644123265716, -0.05491685488292408, -0.054933733192456036, -0.055204950841654665, -0.0552491744831497, -0.05529324391335988, -0.055377614281849785, -0.05576256293231452, -0.05583122090462528, -0.05590657705821156, -0.05593560946105247, -0.05595862504728594, -0.0562601933820594, -0.05650953485596555, -0.056607165343482035, -0.05665138275762038, -0.057281638847046235, -0.05737222984688495, -0.057384721698602814, -0.057469196043980486, -0.057472075114450405, -0.057472309280838074, -0.057776518850914615, -0.05781896145482629, -0.05823409747880154, -0.058271035167407614, -0.05837714699482788, -0.058528169053427836, -0.058547473730233834, -0.058890735411551653, -0.05894612423738299, -0.059057418958872676, -0.05909889614250108, -0.059233084468075625, -0.05928986421344562, -0.05933947898725056, -0.05964847902252435, -0.060055921770460374, -0.060303631417069625, -0.0603089740416759, -0.06066895455809668, -0.060855309134771496, -0.06088378274555373, -0.061054301713339365, -0.06113683501676931, -0.06127102334234391, -0.061307006221843596, -0.061355906976621744, -0.0619201057695043, -0.06193970254926745, -0.062317956277289754, -0.06234856142595657, -0.06258475254878448, -0.06259638518373206, -0.06294400626836205, -0.06298663548421324, -0.06309923172222637, -0.06325146149788041, -0.06353606952831392, -0.06367990243572275, -0.06369759071183095, -0.06370218951998036, -0.06387751148895249, -0.06417519706001312, -0.06455404257397257, -0.0645634160769849, -0.0648067470824768, -0.06509980521365838, -0.065487076123033, -0.06557291121836822, -0.06560920632708667, -0.06582547116781667, -0.06585788653211389, -0.06587736156877899, -0.06610545256181061, -0.06612216048057384, -0.0661387789013978, -0.06621861295076475, -0.06625007362288737, -0.06647368507776225, -0.06667685121675249, -0.06678706132919443, -0.0669774803118689, -0.0671944944727953, -0.06774983575406707, -0.06824665496861304, -0.06838540620823536, -0.06854856164063644, -0.06878565093610295, -0.06880326242186446, -0.06937642261572996, -0.06945147633181004, -0.06951061094130456, -0.06975501512737436, -0.06989993594194543, -0.07050666532988764, -0.0708412012961327, -0.0710773924189606, -0.07144381585660409, -0.07158453269507242, -0.07170118836086808, -0.07180335817951355, -0.07188813423107854, -0.07208777419568285, -0.07245146450674628, -0.07253634814102405, -0.07255774693215422, -0.07263332881221146, -0.07286227902201337, -0.073115331293229, -0.07335591413797848, -0.07359079129742091, -0.07378001987075672, -0.07381249881732893, -0.07397971599320924, -0.07398282923006694, -0.07435052640228995, -0.07438064801466976, -0.07438964379298635, -0.07460662517197436, -0.07463370028588534, -0.07474600403791948, -0.07494475090787023, -0.07494505620298336, -0.07557122945295752, -0.0756899454890031, -0.0757677158331197, -0.07582428172417305, -0.07667984449101978, -0.07703585888620645, -0.07743051478728985, -0.0774909339993991, -0.07800120625987184, -0.07845623495808624, -0.07880320691950898, -0.07893027691846938, -0.07908078889509335, -0.07920004002867703, -0.07953300054983564, -0.07962235530029038, -0.07968340345556474, -0.07972900280503892, -0.08023128846072725, -0.08056691709682678, -0.08066928823523623, -0.08078344596143572, -0.08100515348134374, -0.08109022575234798, -0.08124573632609322, -0.08135491889218954, -0.08155305913302746, -0.08156836949257057, -0.08159550173693914, -0.08183497074101742, -0.08184550339906133, -0.0820834311675972, -0.08213740557188498, -0.08276388411697233, -0.08287361580099634, -0.08301693638818786, -0.08319495635423346, -0.08352304888051171, -0.08361014180067788, -0.08362023733126939, -0.08404112027514293, -0.08406386932313359, -0.08407896633683581, -0.08426035570329587, -0.08450093854804541, -0.0845461607466183, -0.0847983326945615, -0.08487489046285707, -0.08489592615746416, -0.08500245215521857, -0.08505138496577697, -0.0851601571576116, -0.08529196781052656, -0.08536404842080636, -0.08543303350467696, -0.08586385293988846, -0.08607470313167703, -0.08628658007483808, -0.08644232610705976, -0.08668081276051692, -0.08669582255704689, -0.08704279451846964, -0.08721792010772961, -0.08723814695734361, -0.08729584678968522, -0.08744247036193165, -0.08747097237894513, -0.0874787298020932, -0.08758803371491447, -0.08763063952492789, -0.08763103255583238, -0.08776846047262787, -0.08786194289925092, -0.08851790531389103, -0.08884193532442025, -0.08902303356039626, -0.08926361640514585, -0.0892760858316119, -0.08947299975192025, -0.08951666867636143, -0.08951811693404882, -0.08958286562252421, -0.08978632093547134, -0.08985285082007005, -0.08987428315394863, -0.08989399508290674, -0.09010590309128558, -0.09010627052931025, -0.09031696328892147, -0.09032301876655774, -0.09056360161130728, -0.09073926059205711, -0.09080279646469269, -0.09094847199961043, -0.09109958661358303, -0.09121323828157424, -0.09123377493915769, -0.09125652398714845, -0.09204623693283703, -0.09242617749049559, -0.09245079100596798, -0.092784190600944, -0.0928005564168139, -0.09300589812085186, -0.0930154119054199, -0.09303935990604839, -0.09326387233199956, -0.09329097256473767, -0.09363498077107457, -0.09394720505703141, -0.09394905966646377, -0.09405049349571926, -0.09408417580710532, -0.09450958584421043, -0.09458544301986654, -0.09460197969993922, -0.09468191370602042, -0.09482368721984724, -0.09483849529108207, -0.09490227243117355, -0.09491183409133641, -0.09513101002678148, -0.09517345263069305, -0.09544079686769835, -0.09553543438864576, -0.09553566281518211, -0.0957105599779059, -0.09624397021918568, -0.09626110034280416, -0.09635222960490591, -0.09703129627012047, -0.09729865926964609, -0.09741310948685628, -0.0975156734305726, -0.0977427027237141, -0.09774393210218846, -0.09775625627532208, -0.0977645407852889, -0.09797304910637611, -0.09801075680422511, -0.09807888944179932, -0.09814112666362523, -0.09824303430392195, -0.09828190909345402, -0.09829579354780377, -0.09834549069024617, -0.0986318762295949, -0.09876717665469736, -0.09881147372023474, -0.09897884819101777, -0.09901694711135067, -0.09923190046223329, -0.09925752995610021, -0.099503386883809, -0.09979564340727781, -0.10015446847333648, -0.10020347472479874, -0.10045652699601437, -0.10046867108502061, -0.10075278963469031, -0.10075738147932617, -0.10097449715459828, -0.10102377819990455, -0.10103329198447253, -0.10104241655915286, -0.10105668069584722, -0.10114171433047864, -0.10127683047112018, -0.10128634425568805, -0.10150345993096022, -0.10155574875068646, -0.10174404277570959, -0.10176865629118209, -0.10178890449261818, -0.10187456837003522, -0.10204195676383371, -0.10232376340606603, -0.10235279580890683, -0.10239924728208066, -0.10241421610356011, -0.10244301453964955, -0.1027283174791968, -0.10303564028613116, -0.10306895798719895, -0.10307808289004272, -0.1030946195701154, -0.10318276644160473, -0.10330954083194849, -0.10350375875019874, -0.10363123217037035, -0.10380659516545027, -0.10402034427311269, -0.10427339654432827, -0.10439823155544037, -0.10469773529982979, -0.10473661008936197, -0.10507753479173898, -0.105320329479274, -0.105983519701149, -0.1062126367053367, -0.10639578965047625, -0.10648262190288255, -0.10652149669241467, -0.10660996525247346, -0.10673567417409818, -0.1067745489636302, -0.10708240607050301, -0.10710950630324118, -0.10720749063059837, -0.10747148806119389, -0.10768616132824382, -0.10769772347476614, -0.10823635094999523, -0.10828160203582332, -0.10840773466336262, -0.10867600801564958, -0.10869611459497491, -0.10873036782983986, -0.10893669743972445, -0.1089613109551969, -0.10899237723365102, -0.10929447358457955, -0.10937190423196519, -0.10941045232848029, -0.10941396168375639, -0.10947599163213634, -0.10951641807008083, -0.10952593185464854, -0.10953505642932915, -0.11017908797647008, -0.11023790922826177, -0.1102815443627943, -0.1104668056693362, -0.1104810886863779, -0.11068504721778105, -0.1106962652683246, -0.11074619755824955, -0.11097122892182709, -0.11099924982946513, -0.11118445905396784, -0.111334207169076, -0.11139603337985504, -0.11142235404056539, -0.11159744715180175, -0.11166293688531476, -0.11191377625545545, -0.11204618276441086, -0.11216682852667104, -0.11223712186024953, -0.11224747123902762, -0.11251298414328886, -0.11322239792823607, -0.11344120268179991, -0.11378128522342756, -0.11383985318894901, -0.11390875864359928, -0.11427506073451787, -0.11429495633695114, -0.1143353009546288, -0.11440014529461312, -0.11451459551182319, -0.11484511603632935, -0.11497526177305872, -0.11498234921085965, -0.11501413656259085, -0.11502394123652043, -0.11522996255428652, -0.11523540148207528, -0.11535506126496786, -0.11549681881469392, -0.11600751890940736, -0.1160149205701334, -0.11614510124249061, -0.11618503189766588, -0.1162496359281876, -0.11642561474241536, -0.1164380841688814, -0.11646649064772274, -0.11650077064367637, -0.11663499808918959, -0.11665504647112929, -0.11688749172570234, -0.11703628149121803, -0.11726790142855492, -0.11748501710382714, -0.11762959812115598, -0.11765354928271704, -0.11766306306728486, -0.11779240551246001, -0.1178645441021412, -0.11790660155393268, -0.11804545778367564, -0.11837143592868593, -0.11839577327642714, -0.11841867557543062, -0.11851387742322411, -0.11867172784664615, -0.11887816463916845, -0.11895353448887852, -0.11918890513850078, -0.11923883742842573, -0.11963377714731427, -0.11963562097881564, -0.11969846811427448, -0.1197535495342611, -0.12013352983301112, -0.12035097241779541, -0.12040641612563163, -0.12054163378061883, -0.12060402468901105, -0.12074011110920391, -0.12095099665043368, -0.12130933081680517, -0.12146198552719667, -0.12165072821750567, -0.12192663872265203, -0.12202130819041829, -0.12217969099386744, -0.12223888803415789, -0.12251464833347836, -0.12252499771225656, -0.12267476154478424, -0.1226976611524514, -0.12277788831620418, -0.12309421741985782, -0.12311300732308306, -0.12333775590650542, -0.12347498908103577, -0.12365914531173755, -0.12369342530769117, -0.12373640641365463, -0.1238477011351441, -0.12429178429729593, -0.12461282742785773, -0.12467767176784195, -0.12479212198505207, -0.12485453240173222, -0.12491825461259148, -0.1254419812306376, -0.12550748902751552, -0.1260682512936082, -0.12614618915289322, -0.12615570293746114, -0.12628504538263619, -0.1266871086250967, -0.12686768031107432, -0.12691131544560685, -0.12710823845356123, -0.12721014609385795, -0.127224034663537, -0.12781423013678023, -0.12796103318776192, -0.12814453504587392, -0.1282186790331165, -0.12889785000385795, -0.1289509028298873, -0.12942088747261943, -0.12944363652060986, -0.12985216901104862, -0.12989031581646626, -0.13037270717920774, -0.13041105630624006, -0.13041927859282804, -0.13090535765471772, -0.13091434914374483, -0.13093462178644327, -0.13093929690008116, -0.13096901680068224, -0.1310176375824328, -0.13118841880967774, -0.13119301065431366, -0.13130355084233047, -0.1314101263295857, -0.13148788977212877, -0.13157734350546602, -0.13179074855322848, -0.13182103958707336, -0.13185973363709924, -0.1320493287955895, -0.13226544612724955, -0.13234246979817976, -0.13262803652259209, -0.1327036959617363, -0.13274123517191827, -0.13288705032298181, -0.13309412000069293, -0.13314551803841834, -0.1333471722719085, -0.13339094770398918, -0.13339916018843906, -0.13364462024015183, -0.133664847089766, -0.13390542993451549, -0.13405688428581675, -0.13428864303167343, -0.13442217659527256, -0.13467687737650047, -0.1349032396856965, -0.13495113359486044, -0.13528332336362148, -0.1354203313400224, -0.13544973369281876, -0.13557608472413796, -0.13570278596403434, -0.13589130103473251, -0.13594336880878377, -0.13597891326681455, -0.1360349735661347, -0.13612330929246624, -0.13620213471521014, -0.1362319655380302, -0.13650227734587633, -0.1372908879896722, -0.13734884373688733, -0.1374435427000636, -0.13746548654703866, -0.13750614905551184, -0.1375549401521582, -0.13766047507158014, -0.13768322411957062, -0.13788370265033523, -0.1379081958955189, -0.1379851091052608, -0.13809175661000916, -0.13816124816673442, -0.13826691574749306, -0.1383810734736926, -0.1383905872582603, -0.13840889007372897, -0.13849620550634534, -0.13883103966521648, -0.13884336383835005, -0.13887749113839037, -0.1389348492267089, -0.13914619976640608, -0.1392081811016802, -0.13932882686394032, -0.13934175131888976, -0.13940698901392096, -0.13942800640863845, -0.1394616566708584, -0.13960849013106358, -0.13967498248055815, -0.13992164152460346, -0.14006168090349674, -0.14034477397904016, -0.14059181485245392, -0.14060132863702174, -0.1411959947561407, -0.141379690193158, -0.1415867598708691, -0.14185798321555265, -0.1420985660603022, -0.14210554916627766, -0.142137260110328, -0.1428706754589913, -0.14291481646544885, -0.1431715679308294, -0.14367768042315354, -0.14370353848161121, -0.1437268022257766, -0.14394237356299489, -0.14402281752438162, -0.14418295640774437, -0.14435939771368222, -0.14447155313699084, -0.14452761343631088, -0.1448357744696005, -0.14484528825416848, -0.14502654243941077, -0.1450763573143501, -0.14508587109891785, -0.14521674771812376, -0.14522866006808932, -0.1453117355355601, -0.1454573305628733, -0.1454595704115078, -0.14560090076231413, -0.14560261775967487, -0.1456655917292743, -0.14577173223466355, -0.14580850171238907, -0.14583372618391566, -0.14640083576569501, -0.14662066107265315, -0.14663017485722113, -0.14679907355758093, -0.14687371334386873, -0.14688322712843666, -0.14690016188747862, -0.14711429618861827, -0.14738578736536678, -0.14743692935509572, -0.14745047833232688, -0.1474719106662054, -0.1474833808282695, -0.14754412022655744, -0.14756841446290114, -0.14770353060354252, -0.14792064627881452, -0.14816122912356405, -0.1483012685024575, -0.1483017279258791, -0.14834597081802187, -0.1484102726229498, -0.1487327185600087, -0.14883140245141452, -0.14899828223377637, -0.14908041477333317, -0.14915501761161926, -0.14936026399172897, -0.14952131970253785, -0.1496192777921187, -0.14979055206625513, -0.15004841851822487, -0.15042939176674808, -0.15044704440553502, -0.15045195388160404, -0.15070009667675055, -0.15113858049721568, -0.1511469444059143, -0.15149071564665795, -0.1515330107685091, -0.1516642078010056, -0.15178345893458928, -0.15199773457604487, -0.15208635739249304, -0.15242131473210402, -0.15264043051830206, -0.15278901624776564, -0.15311901865275196, -0.1531332903274389, -0.15334458733358136, -0.15344704371990564, -0.1535421737984296, -0.1536000917063169, -0.15442531712135477, -0.15480479214682835, -0.1548581215875559, -0.15489162496813902, -0.15503866115654147, -0.15508850734322976, -0.1550895975198776, -0.15511330094282938, -0.1551228147273972, -0.15514970078624807, -0.15535388378757886, -0.15536339757214673, -0.15538801108761924, -0.15567651695405627, -0.1558347921010106, -0.15584066181617862, -0.15587842723554302, -0.1559021542481695, -0.15594311820250306, -0.1561190100802925, -0.15625495209914747, -0.15651689824366638, -0.15685529392826908, -0.1569029124931261, -0.1571728976906719, -0.15733518813781033, -0.1573831912130001, -0.1574259499618874, -0.15760164540182242, -0.15764460854561885, -0.1577609073014984, -0.1580662985972775, -0.1585662285297692, -0.15865430820810406, -0.1586915414805647, -0.15881928080098479, -0.15883142488999102, -0.1589175481908296, -0.15893212432531428, -0.1589396842757112, -0.1590352814566272, -0.15922931305336513, -0.15935076294289546, -0.15936628380343892, -0.15937816809617622, -0.15938653200487501, -0.15941943450081764, -0.15952641198242418, -0.15961875094092576, -0.1596395842760906, -0.15980133901364196, -0.1600036213292288, -0.1600543912848575, -0.1601609799748906, -0.16023732217500553, -0.16025611833796227, -0.16030745150596576, -0.16032594499145375, -0.16044870859572463, -0.1605091706091779, -0.16059821147503045, -0.16069224708237229, -0.1608268454270353, -0.16104743614963501, -0.16106742827178483, -0.16110132421980333, -0.16115117040649163, -0.16127181616875158, -0.16128165611794193, -0.16141373824055344, -0.1614573733750858, -0.161584174932542, -0.16162748556993745, -0.16173918001731813, -0.1617817613973903, -0.1618462578451993, -0.1618710240565851, -0.16217979579756808, -0.16228225218389247, -0.16229536281208662, -0.16255960450636758, -0.162611732030088, -0.1628523148748376, -0.16286478430130363, -0.16335076145773209, -0.16338928838520872, -0.16344760676316217, -0.16358114721340594, -0.16364234065642436, -0.16386465257995014, -0.16408024941513927, -0.1643333016863549, -0.1645908121448006, -0.16482247340884937, -0.16523044268206222, -0.16523249336621493, -0.1654855456374305, -0.1656227788119608, -0.16566553756084806, -0.16644741215580633, -0.1665589384674538, -0.16656845225202155, -0.16693991171597694, -0.16705886839994533, -0.16715044542575636, -0.1673240647601673, -0.16737215294566443, -0.16774818332467134, -0.16777671548872675, -0.16787917187505108, -0.16800123559588687, -0.16826265292850573, -0.16827164441753306, -0.1682939788838182, -0.16834382507050644, -0.1683533388550743, -0.16859687734172196, -0.16863449679347603, -0.1687487582081385, -0.16880009137614205, -0.16893183468133294, -0.1689413484659007, -0.16905479215737007, -0.16910895136321996, -0.16925602818448615, -0.16950683952659407, -0.1696438102766678, -0.16969696097404652, -0.16977958804582244, -0.16991656582223974, -0.1700118660543935, -0.17008584544416, -0.1701106116555458, -0.17012012544011357, -0.17067243566774432, -0.17082380562080057, -0.17109273103163847, -0.17110437190026417, -0.17116767938007627, -0.1713449547450137, -0.17177865263943282, -0.171881928255385, -0.1721225111001345, -0.17257288928531545, -0.1726378145394883, -0.17276289909958342, -0.17300348194433296, -0.17319670183467972, -0.17338669504149073, -0.1735579160605107, -0.17360514642166425, -0.17372513323639105, -0.174352042415156, -0.1743754788088926, -0.17454778570263613, -0.17456972954961103, -0.17464537916553874, -0.17482278182082667, -0.17483492590983307, -0.17515463039873402, -0.1753900330247169, -0.17550796915529115, -0.17551313307630145, -0.17564308529593253, -0.1758241561397516, -0.1760163030876874, -0.17609530842898052, -0.17624082319484752, -0.17683461427295044, -0.17683646494068267, -0.17684597872525043, -0.17691904702294114, -0.17755795609886377, -0.1776015912333962, -0.17760904274280437, -0.1778620950140199, -0.1779994793967702, -0.1780040436378884, -0.17825613111546568, -0.17827222791599867, -0.17838659909792515, -0.17850450592456968, -0.17863965136914067, -0.17891202326670508, -0.17932074159002293, -0.17936777254347208, -0.17953004645275034, -0.179702729883083, -0.18021705279196126, -0.18028939252762244, -0.1805424447988379, -0.18075057072452544, -0.18087740213844883, -0.1809600292102248, -0.18110133209402945, -0.18135868046429116, -0.1814474574402603, -0.1818288484107789, -0.1820561791126617, -0.18210396927970185, -0.18245215991398916, -0.18249080925417943, -0.18255000942488847, -0.18276983473184671, -0.18300482011579505, -0.18301541385247783, -0.1830404255728123, -0.18306236941978732, -0.1832684661236934, -0.18328100841756179, -0.18330295226453686, -0.18334378448706568, -0.18378021650856874, -0.18388267289489318, -0.1839542529234895, -0.1839588447681253, -0.18400577294647757, -0.18417596044339746, -0.18425333889720252, -0.18433489602794123, -0.18434317761927793, -0.18450894295786358, -0.18458794829915676, -0.18487938888827488, -0.18492290563876768, -0.18500387188666984, -0.185112452383062, -0.1851670778525179, -0.1855559199732949, -0.1857004619938885, -0.18599342322726048, -0.18601536707423538, -0.18610168261298055, -0.18616076137481535, -0.1862558997378872, -0.18640935912863504, -0.18649995164186173, -0.18658143283808692, -0.1868792389681012, -0.18698356420052542, -0.18720100861463967, -0.1872241470452749, -0.18735347232448724, -0.18746944984323533, -0.18760736014243262, -0.18773025953759898, -0.1877602098122998, -0.1878133814601991, -0.1879568695411179, -0.18800868381849695, -0.1880226863229265, -0.18834191883794954, -0.1885322492987001, -0.18872594719961044, -0.18876845080357807, -0.18878203239779856, -0.18880371442587596, -0.18890686090989717, -0.18900903364832755, -0.1890215030747936, -0.18921841699510195, -0.18927456329590225, -0.18956704026232746, -0.18959826806325186, -0.18972131608978032, -0.18979814868656797, -0.18985132033446744, -0.1898996700523144, -0.18994009731043665, -0.1900249906248937, -0.19006843600973944, -0.19023491750447674, -0.19030901885448903, -0.19032077426596977, -0.19032976575499716, -0.19055128672247812, -0.19059660914987803, -0.19069174751294987, -0.19094479978416545, -0.19097919218233933, -0.1911469075875042, -0.191262474602023, -0.19149955124018264, -0.19150305744677248, -0.1918862705439302, -0.1920198041075294, -0.19219620824914974, -0.19219843236708595, -0.19228177325843177, -0.1923094580688527, -0.1928155705611767, -0.1928275358981174, -0.19290060419580818, -0.1930357203364496, -0.19304736120507565, -0.1932349056794132, -0.19329473413683934, -0.19330041347629118, -0.1934066654514785, -0.1935018038145503, -0.19354099632104077, -0.19360509225323808, -0.19375485608576593, -0.19388651050658018, -0.19409229398775263, -0.19448606309743666, -0.1946238173293645, -0.1950593725384559, -0.19525810258383697, -0.19529404199965622, -0.19545141047110198, -0.1956660718570496, -0.19574788143724176, -0.1959176939571286, -0.19596208971341145, -0.1962709497004893, -0.19629289354746432, -0.19657310685227958, -0.1968589593113158, -0.19688090315829082, -0.19723629707415463, -0.19726109067375425, -0.19750167351850384, -0.19758980029303752, -0.19776720316607832, -0.19782430668498113, -0.19784219142816167, -0.19803773628552868, -0.19809090793342798, -0.1981026612384671, -0.1982254045253195, -0.199003083659194, -0.1990439265926543, -0.1990629544437294, -0.19918438738312605, -0.1992845094374039, -0.19938649518646495, -0.2004652756592044, -0.20046936471735421, -0.20051244397770557, -0.2005886158509379, -0.20068648039262632, -0.20072020082052644, -0.20080209793902892, -0.20106533792175452, -0.2015140735343638, -0.20152836020662585, -0.2015343217358, -0.20153747714616194, -0.20154000107525183, -0.20178058392000142, -0.20178737400701557, -0.20189198729840208, -0.2019944436847264, -0.20199692424710236, -0.20212609810554083, -0.20246299324071915, -0.20247373472237862, -0.20275813969479467, -0.20319852827457102, -0.20343911111932061, -0.20355201240863208, -0.20376576151629439, -0.20377875204529167, -0.20378100253038045, -0.20388696974824283, -0.20401881378751002, -0.20407130867804119, -0.20413448603963402, -0.20444315254301165, -0.2044929987296999, -0.20458710661588092, -0.20468224497895265, -0.20476358957066554, -0.20478553341764055, -0.20498341487762367, -0.2050657467224557, -0.2050810083405264, -0.20522399772237326, -0.2052364671488393, -0.20528711486764878, -0.20554859743519438, -0.20572893694433086, -0.20594359833027842, -0.20622803914606436, -0.20625978531473926, -0.20639961800469192, -0.20653093760396818, -0.20669826913520428, -0.20672703588452312, -0.2067526451238761, -0.20686589494357904, -0.20693885197995376, -0.20711894721479468, -0.20719415625638504, -0.20726029628241277, -0.2078543414570414, -0.20787913505664102, -0.2080446719177919, -0.20811971790139056, -0.2082633304312988, -0.20848315573825693, -0.2085908472405748, -0.2087067281983786, -0.2087089523163148, -0.2088282034498985, -0.20966549141926205, -0.20976794780558633, -0.20987430689558434, -0.20992450521965172, -0.210026961605976, -0.21003643653429094, -0.2103674795156339, -0.2104895641172786, -0.21049161480143125, -0.21070938942423667, -0.21074466707264689, -0.2110796244122577, -0.2113428643949835, -0.21142014232191553, -0.21179160000759256, -0.21207602391857144, -0.21215236611868654, -0.21227445072033124, -0.21231089627700173, -0.21240541838990218, -0.21242421455285887, -0.21252750299154688, -0.21274732829850485, -0.21276270890814925, -0.21298563859987613, -0.21300361571223875, -0.2130917791052655, -0.2134580811961838, -0.2134760547477998, -0.21352670246660926, -0.21357135746590417, -0.21371663759254933, -0.21371903196856473, -0.2140412373053705, -0.21438380589918116, -0.2144765133741391, -0.21463685817039668, -0.21472067901624048, -0.21477052520292877, -0.2150235774741444, -0.2150611969258983, -0.21535853481375522, -0.21548581855360388, -0.2155627292499358, -0.2156827283169085, -0.21575293615258906, -0.21634698132721752, -0.21637920621555962, -0.21642905240224786, -0.21653731178796803, -0.2166771444779209, -0.21684608352895107, -0.21697579560843305, -0.21701706201307447, -0.21701720599750934, -0.21753782275564176, -0.21778115061554026, -0.2177908750268573, -0.21816409281861238, -0.2184171450898279, -0.2184669912765161, -0.2188554004328579, -0.21898425467160737, -0.21905500088734264, -0.21913762795911862, -0.21920202929441285, -0.21923545627509083, -0.21932477258126515, -0.21938839389661097, -0.21949036716393144, -0.21991627953956794, -0.21997756889844594, -0.21998072559033993, -0.21998841812924924, -0.22015183336881328, -0.2202337778615555, -0.2205425496025386, -0.22064500598886283, -0.22066380215181952, -0.22073548087365863, -0.22076709059050736, -0.2209869158974656, -0.22110965918431802, -0.2213120160617652, -0.22136271145553355, -0.2216955798479206, -0.22169766879514446, -0.22181036056813253, -0.2220639973360805, -0.22240964439047933, -0.22243122072937316, -0.22287644576935733, -0.22292894065988855, -0.22326316507310479, -0.22386911078874738, -0.2239999254122757, -0.22414474684949615, -0.22450481128184213, -0.22459994964491403, -0.22492169227242403, -0.2251697843480971, -0.22533872339912725, -0.22592800623949372, -0.22603046262581805, -0.22662540673347614, -0.2267065788754768, -0.22682210844319545, -0.2269555633370398, -0.22695963114669238, -0.2269972505984465, -0.2272945884863033, -0.22763026782929474, -0.22788219915779567, -0.22806081760012303, -0.2282280057282099, -0.22840891940974417, -0.22842143313305746, -0.22847336546051605, -0.22870579500138405, -0.22882116021407, -0.22891750938660171, -0.22895325967005736, -0.22895884727259969, -0.22903518947271467, -0.22905398563567148, -0.2291564420219958, -0.2291950046570747, -0.22947955576764179, -0.22957509270525744, -0.2296022990544942, -0.22972013861239127, -0.23051090845405087, -0.2306708083283338, -0.23068003902962492, -0.23076987775170016, -0.2307943293469366, -0.23092413701587527, -0.23226094278261167, -0.23243255342208996, -0.2327443988808029, -0.23283953724387468, -0.2330205630329164, -0.23309258951509026, -0.23341026433294776, -0.23403406027485502, -0.23416759383845426, -0.2342720654945984, -0.2344206461096699, -0.2345081117481122, -0.2346921998162661, -0.23480544963596917, -0.23505850190718475, -0.23512285566472907, -0.2351835100673746, -0.23519515093600052, -0.23519921874565292, -0.23521799402780091, -0.23531474831337168, -0.2354482032072161, -0.23586985542825545, -0.23598422661018192, -0.23623727888139745, -0.23637483902797185, -0.2365460506223805, -0.2366485070087047, -0.23719843487156034, -0.23727477707167544, -0.23729357323463213, -0.23740589231476178, -0.23755438292899583, -0.23781386158797452, -0.23800254960759792, -0.2381597256310246, -0.23862290838157207, -0.23869895960628634, -0.23874773524185117, -0.2388916170095879, -0.2390035483242271, -0.23909868668729894, -0.23924426066226628, -0.23935173895851458, -0.23945384243915374, -0.23991493517548773, -0.24092519329226614, -0.24099580459545128, -0.2413321771140508, -0.24163821106328243, -0.2426295892241332, -0.24266023370863055, -0.24270593142424818, -0.2427100798953188, -0.24276470536477462, -0.2429631321665343, -0.24300075161828844, -0.24329808950614523, -0.2433624432636896, -0.24342309766633502, -0.24345758162676134, -0.24362228300929856, -0.2436761499375507, -0.24368779080617664, -0.24371063389797704, -0.24372333256371453, -0.24392837365092612, -0.24402830871583459, -0.24406431861996514, -0.24426889156058418, -0.2444077134147679, -0.24447686648035805, -0.24474267075437878, -0.24478563822134114, -0.2449915221740553, -0.24503869049255672, -0.24532788704985575, -0.24558690085024537, -0.24559227478660067, -0.24597011394740315, -0.24602326197016916, -0.2466407884606246, -0.2466523655012008, -0.24666444491243933, -0.24687219080815903, -0.2471252430793745, -0.24713120460854854, -0.24722879807145126, -0.24737178745329813, -0.247384256879764, -0.24783190940222471, -0.24802393669764844, -0.2483004589582174, -0.24840757504566413, -0.24911887160273943, -0.2492667369457196, -0.24931454472375442, -0.24934194598730974, -0.2498623050451531, -0.25019246164871667, -0.25027912785170126, -0.2504131980734336, -0.2504455139199323, -0.2505443242119232, -0.2510311091260167, -0.25109943132680707, -0.2512027197654949, -0.2513524835980227, -0.25191573753651136, -0.2519502214969377, -0.25225625544616925, -0.253170272697018, -0.25327827809151743, -0.25409599740001526, -0.2542941943204376, -0.2543058351890635, -0.2545464180338131, -0.2548951180294299, -0.2549989120911887, -0.255133428330801, -0.2553648306783351, -0.2556238444787248, -0.2558644273234743, -0.25620494523313225, -0.25658815833029, -0.25677271595100304, -0.25691831493385353, -0.25717136720506917, -0.2572588328435116, -0.257356537573319, -0.25750632454468014, -0.25774924899143536, -0.2578468424543381, -0.2579134896360698, -0.25798983183618485, -0.25800230126265095, -0.25826798214609503, -0.2583178283327833, -0.2585768421331728, -0.25868510151889296, -0.2590369640820994, -0.259123585339358, -0.25936416818410757, -0.25939447644758723, -0.25954714734412737, -0.25959207119698335, -0.2603436287182122, -0.26072671232208033, -0.2608218506851521, -0.2612139140565948, -0.2613498190253379, -0.2614098602959786, -0.26159040187008736, -0.2619736149672451, -0.2621285153212648, -0.262476746650641, -0.26253378191939813, -0.2625886372701914, -0.26282850419997733, -0.26313470562839053, -0.26337528847314007, -0.26338775789960617, -0.2649750936766169, -0.2654109548040298, -0.2654840231017206, -0.2655131624123167, -0.26562825618189817, -0.26575147271368776, -0.26616554666149655, -0.26624188886161154, -0.26626068502456823, -0.26650126786931777, -0.2667900282553852, -0.2668104682029594, -0.26706948200334907, -0.267179451180458, -0.2675363593167404, -0.2676340640465478, -0.2677292024096195, -0.26774011868595166, -0.26778941158795605, -0.26798225468083514, -0.2681243689275669, -0.2685455086193239, -0.26859535480601204, -0.26885436860640166, -0.2691074208776173, -0.2691185443159445, -0.2693031459017797, -0.26931449055532825, -0.2694423782172283, -0.2695250052890043, -0.26974162972224486, -0.26977805756022005, -0.26978289612688616, -0.26980169228984285, -0.2703621413910514, -0.2705692228639823, -0.2706211551914411, -0.2714297946725249, -0.27156778272993876, -0.27162734549856676, -0.27186792834331636, -0.2727542731238699, -0.272974098430828, -0.27322645391369277, -0.2732271507020436, -0.27375275001127736, -0.2739766629718968, -0.274005802282493, -0.27412089605207435, -0.2744862215693453, -0.2745803431530148, -0.2747533248947445, -0.27499390773949406, -0.2751683527638414, -0.27602492440124815, -0.27602899918691653, -0.2762218422797959, -0.27634712973805425, -0.2765151056961027, -0.276953239366894, -0.2770879946761883, -0.2772062916381096, -0.27734700847657795, -0.2776111841861208, -0.2776875263862358, -0.2777063225491926, -0.2780176451591806, -0.2787099414989836, -0.2791635530022108, -0.27939607078917345, -0.2794724129892885, -0.2797254652605041, -0.28006042260011504, -0.28014304967189113, -0.2803961019431067, -0.28078039294012325, -0.2808467493372112, -0.2809979849189615, -0.2812391995743278, -0.28146673830100427, -0.28217908505119654, -0.28224538988145353, -0.28234092681906914, -0.282485972726203, -0.2830729830231911, -0.2845175642714245, -0.28465944282448424, -0.28485786962624365, -0.2849124950956999, -0.28500763345877156, -0.2851109218974593, -0.28544587923707027, -0.2861547763718169, -0.28622161947856734, -0.28662465621128297, -0.2869651741209409, -0.28703789960841036, -0.28794483764484663, -0.28796505285946467, -0.28798384902242147, -0.2881085359663078, -0.2886356895420675, -0.289019980539084, -0.2893604984487418, -0.2905805144180299, -0.2914647937200981, -0.2929123758256286, -0.2931520826946604, -0.2932472210577322, -0.29335050949641983, -0.29350027332894785, -0.2936910274060778, -0.2946474162419931, -0.29469726242868116, -0.29479509074465343, -0.29491142759650324, -0.2954759140091304, -0.29553053947858665, -0.29562567784165844, -0.29572896628034606, -0.2964640490137207, -0.29647648889259776, -0.2966011758364841, -0.2966963141995559, -0.2967728207547037, -0.2968417586812337, -0.2969493664707715, -0.2971899493155211, -0.2972427005941699, -0.2975126204092602, -0.2977532032540097, -0.29822236411807557, -0.29955417349093216, -0.2996380249219708, -0.29989107719318636, -0.3002373214648305, -0.3004656180637083, -0.30128921390729685, -0.3016374045415843, -0.3017398609279085, -0.3019270697048113, -0.30208037883756644, -0.30227526033909874, -0.30310584667902424, -0.30318990229885756, -0.3037701270775473, -0.303865265440619, -0.3039685538793067, -0.3041183177118346, -0.304270343523016, -0.3051889540697321, -0.30526546062488, -0.30541313512754015, -0.30542953691448166, -0.3066125476019274, -0.30809210553749217, -0.30813066479214707, -0.30971157006145994, -0.309831699964161, -0.3098769921405448, -0.3101300444117604, -0.3102175100502027, -0.3105148479380594, -0.3105802047566799, -0.3107431445369372, -0.3109961968081527, -0.3116936249122722, -0.31190725829018356, -0.31216031056139915, -0.312255448924471, -0.31235790531079527, -0.31250993112197656, -0.3136242006605862, -0.3148521352008881, -0.3151218881617532, -0.31530814649311767, -0.3153749404329687, -0.31663459159435636, -0.3183243398343373, -0.3183696320107211, -0.318419478197409, -0.31871014992037894, -0.31900748780823557, -0.31923578440711337, -0.3195763023167713, -0.3201862647824485, -0.32039989816035985, -0.32049503652343164, -0.3207480887946473, -0.3211982491395666, -0.3219491985306505, -0.32201673809827236, -0.3221521737059817, -0.3231279755048634, -0.3232361880138349, -0.32360786971440453, -0.32361452803192936, -0.32599298481585554, -0.3269121180675853, -0.32847143909418025, -0.3285665774572521, -0.3288071603020016, -0.3289876763936078, -0.330256325697233, -0.33050937796844854, -0.3306045163315203, -0.33147577561279556, -0.33213056625004006, -0.3328387276996348, -0.3342325724148162, -0.3350601655565536, -0.33510678181368986, -0.3355796593918636, -0.33647096908352814, -0.33684505215960625, -0.3370592173274283, -0.3374330617704328, -0.3387489655674092, -0.338844103930481, -0.3390846867752305, -0.3390894834770672, -0.3390971562016966, -0.3394252046848884, -0.3403701538490006, -0.3411274223513354, -0.34122256071440726, -0.34170196322185725, -0.3427486106329268, -0.3438192469908243, -0.34533769202978254, -0.3456782099394405, -0.34602998836958554, -0.34733674380065716, -0.34746309654249313, -0.3475773266454067, -0.3476772617103152, -0.3479178445550647, -0.34922988312753245, -0.3493670099502961, -0.3494621483133678, -0.34970977733707376, -0.34971520058458344, -0.35019460309203354, -0.3508777510659318, -0.3509881982318875, -0.35124125050310306, -0.35215355281115707, -0.35232000760474413, -0.35232768032937356, -0.3525524697057501, -0.35266263766898454, -0.3529080172155707, -0.3538414146431974, -0.35409446691441293, -0.35469290381862334, -0.3559557364126693, -0.35699992493181326, -0.3579547881835441, -0.3587823813252815, -0.35881655770354065, -0.35937838171573944, -0.3604721295652624, -0.3605672679283342, -0.3623340545133736, -0.36318554368879963, -0.3632806820518713, -0.36353373432308694, -0.3643643206630124, -0.3644594590260842, -0.3647125112972998, -0.36549256480198944, -0.36554241098867746, -0.36645461410265745, -0.3667951320123154, -0.3676179693147, -0.3678710215859156, -0.36905990779851044, -0.3694004257081684, -0.3710901739481492, -0.37118531231122104, -0.3717733219220476, -0.37295209889626046, -0.37403505085885363, -0.37611060918487627, -0.3770726584855443, -0.37772744912278877, -0.3796779521813973, -0.38027314784116095, -0.3859670367217493, -0.38630755463140737, -0.3883454935056756, -0.39272475983550487, -0.39658508110463603, -0.39683813337585166, -0.40096434743446563, -0.4050777209748124, -0.4076902007196025, -0.41006865750352867, -0.4115823918173525, -0.4120622860268936, -0.41830824510248926, -0.42680088497266533]
        #This is 1- specificity or false positivie rate, which is gained from test set result and will be used to determine the threshold later
        self.FPR_T=[0.0, 0.0, 0.0, 0.00011412919424788861, 0.00011412919424788861, 0.00011412919424788861, 0.00011412919424788861, 0.00022825838849577722, 0.00022825838849577722, 0.00045651677699155445, 0.00045651677699155445, 0.0009130335539831089, 0.0009130335539831089, 0.0011412919424788862, 0.0011412919424788862, 0.0013695503309746632, 0.0013695503309746632, 0.0015978087194704405, 0.0015978087194704405, 0.0019401963022141063, 0.0019401963022141063, 0.0021684546907098836, 0.0021684546907098836, 0.0023967130792056607, 0.0023967130792056607, 0.002624971467701438, 0.002624971467701438, 0.0028532298561972152, 0.002967359050445104, 0.002967359050445104, 0.002967359050445104, 0.0030814882446929923, 0.0030814882446929923, 0.003195617438940881, 0.003195617438940881, 0.003195617438940881, 0.003195617438940881, 0.003195617438940881, 0.0033097466331887698, 0.0033097466331887698, 0.0033097466331887698, 0.0033097466331887698, 0.003538005021684547, 0.003538005021684547, 0.003538005021684547, 0.0036521342159324356, 0.0038803926044282126, 0.003994521798676101, 0.003994521798676101, 0.00410865099292399, 0.00410865099292399, 0.00410865099292399, 0.004336909381419767, 0.004336909381419767, 0.004679296964163433, 0.004679296964163433, 0.004679296964163433, 0.004679296964163433, 0.00490755535265921, 0.00490755535265921, 0.00490755535265921, 0.00490755535265921, 0.0051358137411549876, 0.0051358137411549876, 0.005478201323898653, 0.005478201323898653, 0.005592330518146542, 0.005592330518146542, 0.0057064597123944304, 0.0057064597123944304, 0.005820588906642319, 0.005820588906642319, 0.005934718100890208, 0.005934718100890208, 0.005934718100890208, 0.006277105683633873, 0.006277105683633873, 0.006391234877881762, 0.006391234877881762, 0.006505364072129651, 0.006505364072129651, 0.0066194932663775395, 0.006847751654873316, 0.006847751654873316, 0.007076010043369094, 0.007076010043369094, 0.007190139237616982, 0.007190139237616982, 0.007304268431864871, 0.007304268431864871, 0.007532526820360649, 0.0076466560146085365, 0.0076466560146085365, 0.007760785208856425, 0.007760785208856425, 0.007760785208856425, 0.007760785208856425, 0.007760785208856425, 0.007874914403104314, 0.007989043597352202, 0.007989043597352202, 0.00821730198584798, 0.00821730198584798, 0.008331431180095869, 0.008331431180095869, 0.008445560374343757, 0.008445560374343757, 0.008559689568591647, 0.008559689568591647, 0.008673818762839534, 0.008673818762839534, 0.008673818762839534, 0.008673818762839534, 0.008787947957087422, 0.008787947957087422, 0.0090162063455832, 0.0090162063455832, 0.0090162063455832, 0.0090162063455832, 0.00913033553983109, 0.00913033553983109, 0.009244464734078977, 0.009244464734078977, 0.009358593928326865, 0.009358593928326865, 0.00981511070531842, 0.00992923989956631, 0.010043369093814198, 0.010043369093814198, 0.01061401506505364, 0.01061401506505364, 0.01061401506505364, 0.010956402647797306, 0.010956402647797306, 0.011070531842045195, 0.011070531842045195, 0.011184661036293083, 0.011184661036293083, 0.011298790230540973, 0.011298790230540973, 0.011412919424788861, 0.011412919424788861, 0.011641177813284638, 0.011755307007532526, 0.011755307007532526, 0.011983565396028304, 0.012097694590276193, 0.012097694590276193, 0.012325952978771969, 0.012440082173019859, 0.012554211367267747, 0.012668340561515636, 0.012668340561515636, 0.012782469755763524, 0.012782469755763524, 0.012896598950011414, 0.01312485733850719, 0.013238986532755079, 0.013238986532755079, 0.013238986532755079, 0.013353115727002967, 0.013353115727002967, 0.013353115727002967, 0.013353115727002967, 0.013695503309746632, 0.013695503309746632, 0.013809632503994522, 0.013809632503994522, 0.01392376169824241, 0.0140378908924903, 0.0140378908924903, 0.014152020086738187, 0.014152020086738187, 0.014266149280986077, 0.014266149280986077, 0.014380278475233965, 0.01483679525222552, 0.01483679525222552, 0.015065053640721297, 0.015065053640721297, 0.015293312029217073, 0.015293312029217073, 0.015407441223464963, 0.015863958000456518, 0.015863958000456518, 0.016092216388952293, 0.016092216388952293, 0.016320474777448073, 0.016320474777448073, 0.01643460397169596, 0.01643460397169596, 0.01643460397169596, 0.016891120748687514, 0.017119379137183293, 0.017119379137183293, 0.01723350833143118, 0.01723350833143118, 0.01734763752567907, 0.01734763752567907, 0.01746176671992696, 0.01746176671992696, 0.017575895914174845, 0.017804154302670624, 0.017918283496918513, 0.017918283496918513, 0.0180324126911664, 0.01814654188541429, 0.018374800273910065, 0.018374800273910065, 0.01883131705090162, 0.01883131705090162, 0.01894544624514951, 0.01894544624514951, 0.0190595754393974, 0.0190595754393974, 0.019287833827893175, 0.019401963022141065, 0.01951609221638895, 0.01951609221638895, 0.01951609221638895, 0.01951609221638895, 0.019972608993380506, 0.019972608993380506, 0.020086738187628395, 0.020086738187628395, 0.020200867381876285, 0.020200867381876285, 0.02031499657612417, 0.02031499657612417, 0.02054325496461995, 0.02054325496461995, 0.02065738415886784, 0.020771513353115726, 0.020771513353115726, 0.020885642547363616, 0.020885642547363616, 0.020999771741611505, 0.020999771741611505, 0.020999771741611505, 0.020999771741611505, 0.02122803013010728, 0.02122803013010728, 0.02122803013010728, 0.02145628851860306, 0.02145628851860306, 0.021684546907098836, 0.021684546907098836, 0.021912805295594612, 0.021912805295594612, 0.0220269344898425, 0.0220269344898425, 0.02214106368409039, 0.022483451266834056, 0.022483451266834056, 0.022483451266834056, 0.022597580461081946, 0.022597580461081946, 0.023054097238073498, 0.023054097238073498, 0.023168226432321387, 0.023168226432321387, 0.023168226432321387, 0.023282355626569277, 0.023282355626569277, 0.023396484820817166, 0.023396484820817166, 0.023396484820817166, 0.023510614015065052, 0.023510614015065052, 0.023624743209312942, 0.02373887240356083, 0.023853001597808718, 0.023853001597808718, 0.024081259986304497, 0.024195389180552387, 0.024195389180552387, 0.024423647569048162, 0.024766035151791828, 0.024766035151791828, 0.024880164346039717, 0.025108422734535493, 0.025336681123031272, 0.025564939511527048, 0.025564939511527048, 0.025679068705774938, 0.025679068705774938, 0.025907327094270714, 0.026021456288518603, 0.026021456288518603, 0.026021456288518603, 0.026135585482766493, 0.026135585482766493, 0.02624971467701438, 0.02624971467701438, 0.026592102259758048, 0.026592102259758048, 0.026706231454005934, 0.026706231454005934, 0.026820360648253824, 0.0270486190367496, 0.0270486190367496, 0.02727687742524538, 0.027505135813741154, 0.027619265007989044, 0.027619265007989044, 0.0280757817849806, 0.028189910979228485, 0.028418169367724264, 0.02876055695046793, 0.02876055695046793, 0.02887468614471582, 0.029102944533211595, 0.029102944533211595, 0.029102944533211595, 0.029217073727459485, 0.029217073727459485, 0.029217073727459485, 0.029217073727459485, 0.029217073727459485, 0.029331202921707374, 0.02955946131020315, 0.02955946131020315, 0.029787719698698926, 0.029901848892946815, 0.029901848892946815, 0.030015978087194705, 0.030015978087194705, 0.030015978087194705, 0.03024423647569048, 0.030586624058434146, 0.030586624058434146, 0.030814882446929925, 0.030929011641177815, 0.030929011641177815, 0.03115727002967359, 0.03115727002967359, 0.03138552841816937, 0.031499657612417256, 0.031499657612417256, 0.031727916000913035, 0.031727916000913035, 0.03184204519516092, 0.03229856197215248, 0.03252682036064825, 0.032640949554896145, 0.032640949554896145, 0.03286920794339192, 0.03286920794339192, 0.0330974663318877, 0.0330974663318877, 0.03321159552613558, 0.03321159552613558, 0.03343985391463136, 0.03343985391463136, 0.03366811230312714, 0.03366811230312714, 0.03366811230312714, 0.03378224149737503, 0.03378224149737503, 0.03378224149737503, 0.033896370691622914, 0.033896370691622914, 0.03401049988587081, 0.03401049988587081, 0.03412462908011869, 0.03526592102259758, 0.035494179411093355, 0.035494179411093355, 0.03560830860534125, 0.03560830860534125, 0.035722437799589134, 0.03583656699383703, 0.03595069618808491, 0.03595069618808491, 0.0360648253823328, 0.03629308377082858, 0.037320246519059574, 0.03743437571330746, 0.03766263410180324, 0.0381191508787948, 0.03834740926729057, 0.03834740926729057, 0.038461538461538464, 0.038461538461538464, 0.038689796850034236, 0.038689796850034236, 0.03880392604428213, 0.03880392604428213, 0.0390321844327779, 0.0390321844327779, 0.03926044282127368, 0.039374572015521574, 0.039374572015521574, 0.03948870120976946, 0.03948870120976946, 0.03971695959826524, 0.03971695959826524, 0.03971695959826524, 0.03994521798676101, 0.04017347637525679, 0.04017347637525679, 0.04028760556950468, 0.04028760556950468, 0.04040173476375257, 0.040744122346496235, 0.040972380734992014, 0.040972380734992014, 0.0410865099292399, 0.04120063912348779, 0.04131476831773568, 0.04154302670623145, 0.04154302670623145, 0.041657155900479345, 0.04188541428897512, 0.04188541428897512, 0.04199954348322301, 0.04222780187171878, 0.042341931065966676, 0.04257018945446245, 0.04268431864871034, 0.04268431864871034, 0.04268431864871034, 0.04291257703720612, 0.04302670623145401, 0.04302670623145401, 0.04314083542570189, 0.04314083542570189, 0.043254964619949786, 0.043254964619949786, 0.043254964619949786, 0.04348322300844556, 0.04348322300844556, 0.04359735220269345, 0.04359735220269345, 0.04371148139694134, 0.04393973978543712, 0.04428212736818078, 0.04439625656242867, 0.04439625656242867, 0.04451038575667656, 0.04451038575667656, 0.04462451495092445, 0.04462451495092445, 0.04485277333942023, 0.04485277333942023, 0.04485277333942023, 0.045081031727916, 0.04519516092216389, 0.04519516092216389, 0.04530929011641178, 0.04553754850490756, 0.04553754850490756, 0.04553754850490756, 0.04576580689340333, 0.04667884044738644, 0.04690709883588222, 0.047249486418625884, 0.04736361561287377, 0.04736361561287377, 0.04782013238986533, 0.04782013238986533, 0.04827664916685688, 0.04827664916685688, 0.04839077836110477, 0.04850490755535266, 0.04850490755535266, 0.048847295138096325, 0.048847295138096325, 0.04896142433234421, 0.04896142433234421, 0.049075553526592104, 0.049075553526592104, 0.049303811915087876, 0.049532070303583656, 0.049532070303583656, 0.049532070303583656, 0.04964619949783154, 0.04964619949783154, 0.04987445788632732, 0.04987445788632732, 0.049988587080575214, 0.049988587080575214, 0.0501027162748231, 0.05033097466331888, 0.05033097466331888, 0.050445103857566766, 0.050445103857566766, 0.05055923305181465, 0.05055923305181465, 0.050673362246062545, 0.050673362246062545, 0.05101574982880621, 0.051129879023054096, 0.051129879023054096, 0.051358137411549876, 0.051358137411549876, 0.05147226660579776, 0.05147226660579776, 0.05170052499429354, 0.05170052499429354, 0.05192878338278932, 0.05192878338278932, 0.052042912577037206, 0.05215704177128509, 0.05215704177128509, 0.05238530015978087, 0.05238530015978087, 0.05261355854827665, 0.05272768774252454, 0.053184204519516096, 0.05352659210225976, 0.05364072129650765, 0.05375485049075553, 0.05375485049075553, 0.05432549646199498, 0.054439625656242864, 0.05466788404473864, 0.05478201323898653, 0.05501027162748231, 0.055352659210225974, 0.055352659210225974, 0.05546678840447387, 0.05546678840447387, 0.05558091759872175, 0.05558091759872175, 0.05580917598721753, 0.05580917598721753, 0.056037434375713305, 0.056037434375713305, 0.0561515635699612, 0.056265692764209084, 0.05672220954120064, 0.05683633873544853, 0.05683633873544853, 0.056950467929696415, 0.05706459712394431, 0.05706459712394431, 0.057178726318192194, 0.057178726318192194, 0.05740698470668797, 0.05740698470668797, 0.05774937228943164, 0.05797763067792741, 0.05797763067792741, 0.058091759872175304, 0.05820588906642319, 0.058320018260671076, 0.058548276649166855, 0.05866240584341475, 0.05866240584341475, 0.059233051814654186, 0.05957543939739785, 0.059689568591645745, 0.05980369778589363, 0.05980369778589363, 0.05991782698014152, 0.05991782698014152, 0.060146085368637296, 0.060146085368637296, 0.06026021456288519, 0.06026021456288519, 0.060374343757133075, 0.06048847295138096, 0.060602602145628855, 0.060602602145628855, 0.06071673133987674, 0.06083086053412463, 0.061059118922620406, 0.061059118922620406, 0.061287377311116185, 0.061287377311116185, 0.061972152476603516, 0.061972152476603516, 0.062200410865099295, 0.062200410865099295, 0.06231454005934718, 0.06231454005934718, 0.06242866925359507, 0.06242866925359507, 0.06254279844784295, 0.06277105683633874, 0.06288518603058663, 0.06288518603058663, 0.0631134444190824, 0.0631134444190824, 0.06322757361333028, 0.06322757361333028, 0.0641406071673134, 0.06528189910979229, 0.06551015749828806, 0.06562428669253595, 0.06562428669253595, 0.06596667427527962, 0.0661949326637754, 0.06676557863501484, 0.06676557863501484, 0.06699383702351061, 0.06733622460625428, 0.06745035380050217, 0.06745035380050217, 0.06756448299475006, 0.06802099977174161, 0.06847751654873317, 0.06870577493722894, 0.06881990413147683, 0.06881990413147683, 0.0690481625199726, 0.06996119607395572, 0.07018945446245149, 0.07018945446245149, 0.07076010043369094, 0.07076010043369094, 0.07087422962793882, 0.07098835882218671, 0.07098835882218671, 0.0712166172106825, 0.07155900479342615, 0.07167313398767405, 0.07167313398767405, 0.07190139237616983, 0.0721296507646656, 0.07224377995891348, 0.07224377995891348, 0.07247203834740927, 0.07247203834740927, 0.07258616754165716, 0.07281442593015293, 0.07292855512440082, 0.07338507190139237, 0.07372745948413605, 0.07452636384387126, 0.07452636384387126, 0.07464049303811915, 0.07464049303811915, 0.07475462223236704, 0.07475462223236704, 0.07486875142661492, 0.07509700981511071, 0.07543939739785437, 0.07555352659210227, 0.07601004336909381, 0.0762383017575896, 0.07635243095183748, 0.07635243095183748, 0.07646656014608537, 0.0781784980598037, 0.07863501483679525, 0.07863501483679525, 0.07863501483679525, 0.07874914403104315, 0.07931979000228258, 0.07931979000228258, 0.07954804839077836, 0.07977630677927414, 0.0802328235562657, 0.08046108194476147, 0.08057521113900935, 0.0811458571102488, 0.0811458571102488, 0.08160237388724036, 0.08240127824697557, 0.08285779502396713, 0.08491212052042912, 0.0852545081031728, 0.08536863729742068, 0.08559689568591645, 0.08582515407441224, 0.08582515407441224, 0.08650992923989957, 0.08650992923989957, 0.08673818762839534, 0.08673818762839534, 0.08685231682264323, 0.08730883359963479, 0.08765122118237845, 0.08776535037662635, 0.08787947957087423, 0.08787947957087423, 0.08810773795937, 0.08845012554211368, 0.08856425473636156, 0.08890664231910522, 0.09175987217530245, 0.09198813056379822, 0.0921022597580461, 0.09255877653503766, 0.09290116411778133, 0.09290116411778133, 0.09301529331202922, 0.093243551700525, 0.09335768089477288, 0.09335768089477288, 0.09358593928326867, 0.09370006847751655, 0.09404245606026021, 0.09404245606026021, 0.09415658525450811, 0.094270714448756, 0.094270714448756, 0.09461310203149965, 0.09484136041999544, 0.09506961880849121, 0.0951837480027391, 0.0951837480027391, 0.09552613558548277, 0.09552613558548277, 0.09564026477973066, 0.09575439397397854, 0.09586852316822643, 0.09643916913946587, 0.09666742752796165, 0.0982652362474321, 0.09860762383017575, 0.09860762383017575, 0.09940652818991098, 0.09952065738415887, 0.09974891577265464, 0.09974891577265464, 0.10009130335539831, 0.10043369093814197, 0.10089020771513353, 0.10100433690938142, 0.1011184661036293, 0.1011184661036293, 0.1012325952978772, 0.1012325952978772, 0.10134672449212509, 0.10134672449212509, 0.10134672449212509, 0.10146085368637298, 0.10146085368637298, 0.10157498288062086, 0.10180324126911663, 0.1021456288518603, 0.10237388724035608, 0.10283040401734764, 0.10294453321159552, 0.10294453321159552, 0.10305866240584341, 0.10351517918283497, 0.10362930837708285, 0.1041999543483223, 0.1041999543483223, 0.10431408354257019, 0.10465647112531386, 0.10465647112531386, 0.10488472951380963, 0.10511298790230542, 0.1052271170965533, 0.1052271170965533, 0.10545537548504907, 0.10545537548504907, 0.1061401506505364, 0.10625427984478429, 0.10625427984478429, 0.10671079662177585, 0.10671079662177585, 0.10716731339876741, 0.10716731339876741, 0.10739557178726318, 0.10773795937000685, 0.10773795937000685, 0.1083086053412463, 0.10887925131248573, 0.10887925131248573, 0.10887925131248573, 0.10899338050673363, 0.10910750970098151, 0.10910750970098151, 0.1092216388952294, 0.10944989728372517, 0.10944989728372517, 0.10956402647797306, 0.10979228486646884, 0.10990641406071673, 0.10990641406071673, 0.11002054325496462, 0.11081944761469983, 0.1111618351974435, 0.11127596439169139, 0.11127596439169139, 0.11173248116868295, 0.11173248116868295, 0.11412919424788862, 0.11435745263638439, 0.11492809860762383, 0.1151563569961196, 0.1151563569961196, 0.11538461538461539, 0.11561287377311116, 0.11595526135585482, 0.11595526135585482, 0.11618351974435061, 0.1162976489385985, 0.11675416571559005, 0.1172106824925816, 0.1173248116868295, 0.1173248116868295, 0.11766719926957316, 0.11789545765806893, 0.11800958685231683, 0.1182378452408126, 0.1182378452408126, 0.11858023282355627, 0.11937913718329149, 0.11983565396028303, 0.11994978315453093, 0.1201780415430267, 0.12040629993152248, 0.12052042912577038, 0.12109107509700981, 0.12120520429125771, 0.12166172106824925, 0.12177585026249714, 0.12177585026249714, 0.1222323670394887, 0.1222323670394887, 0.1222323670394887, 0.12246062542798448, 0.12246062542798448, 0.12291714220497603, 0.12291714220497603, 0.12303127139922392, 0.1232595297877197, 0.12371604656471126, 0.12371604656471126, 0.12405843414745492, 0.12405843414745492, 0.12428669253595069, 0.12474320931294225, 0.12485733850719014, 0.12485733850719014, 0.12599863044966902, 0.12599863044966902, 0.1261127596439169, 0.12634101803241268, 0.12656927642090846, 0.12691166400365214, 0.1271399223921479, 0.1271399223921479, 0.1272540515863958, 0.12759643916913946, 0.12805295594613103, 0.12805295594613103, 0.1283953435288747, 0.129080118694362, 0.1293083770828578, 0.1293083770828578, 0.12987902305409724, 0.12987902305409724, 0.12999315224834512, 0.1302214106368409, 0.1302214106368409, 0.13067792741383247, 0.13067792741383247, 0.131134444190824, 0.1312485733850719, 0.13136270257931978, 0.13147683177356767, 0.13147683177356767, 0.13159096096781556, 0.13193334855055924, 0.13216160693905502, 0.1323898653275508, 0.13250399452179867, 0.13273225291029445, 0.13296051129879022, 0.13318876968728602, 0.13318876968728602, 0.1334170280757818, 0.13353115727002968, 0.13353115727002968, 0.13364528646427756, 0.13364528646427756, 0.13375941565852545, 0.1343300616297649, 0.1343300616297649, 0.1344441908240128, 0.1344441908240128, 0.13467244921250857, 0.13467244921250857, 0.13490070760100434, 0.13501483679525222, 0.13547135357224377, 0.1361561287377311, 0.1361561287377311, 0.13638438712622689, 0.13649851632047477, 0.13672677470897054, 0.13684090390321843, 0.13718329148596212, 0.13729742068021, 0.13775393745720155, 0.13798219584569732, 0.13798219584569732, 0.13878110020543255, 0.1392376169824241, 0.13980826295366355, 0.13992239214791144, 0.1401506505364072, 0.1402647797306551, 0.14037890892490298, 0.14037890892490298, 0.14117781328463821, 0.14152020086738187, 0.14163433006162976, 0.1423191052271171, 0.1423191052271171, 0.14254736361561288, 0.14460168911207488, 0.14505820588906643, 0.1451723350833143, 0.14540059347181009, 0.14562885186030586, 0.14585711024880163, 0.14597123944304954, 0.14619949783154532, 0.14665601460853686, 0.14677014380278475, 0.14699840219128052, 0.14699840219128052, 0.14722666057977632, 0.1474549189682721, 0.14768317735676786, 0.14779730655101575, 0.1481396941337594, 0.1482538233280073, 0.14836795252225518, 0.1492809860762383, 0.14950924446473407, 0.14973750285322984, 0.14985163204747776, 0.14996576124172564, 0.1503081488244693, 0.1504222780187172, 0.15053640721296507, 0.15065053640721296, 0.15099292398995662, 0.1514494407669482, 0.15156356996119608, 0.15179182834969185, 0.15190595754393973, 0.15259073270942708, 0.15293312029217074, 0.15487331659438483, 0.15510157498288063, 0.15590047934261583, 0.1564711253138553, 0.15658525450810318, 0.15692764209084684, 0.15738415886783838, 0.15738415886783838, 0.15761241725633418, 0.1614928098607624, 0.16160693905501028, 0.16160693905501028, 0.16297648938598494, 0.16309061858023283, 0.16309061858023283, 0.1632047477744807, 0.16343300616297649, 0.16354713535722437, 0.1643460397169596, 0.1644601689112075, 0.1644601689112075, 0.16640036521342158, 0.1665144944076695, 0.16674275279616527, 0.16674275279616527, 0.16685688199041315, 0.16697101118466104, 0.16742752796165258, 0.16788404473864416, 0.16788404473864416, 0.16799817393289204, 0.1684546907098836, 0.16891120748687513, 0.16902533668112305, 0.16902533668112305, 0.16913946587537093, 0.16913946587537093, 0.16925359506961882, 0.16971011184661036, 0.17005249942935402, 0.1701666286236019, 0.1705090162063456, 0.1711937913718329, 0.17187856653732025, 0.17199269573156814, 0.17244921250855968, 0.17256334170280757, 0.17267747089705546, 0.17290572928555126, 0.17359050445103857, 0.17427527961652592, 0.17461766719926958, 0.17507418397626112, 0.175188313170509, 0.17541657155900478, 0.17564482994750058, 0.17575895914174847, 0.17644373430723578, 0.17678612188997947, 0.17758502624971467, 0.17975348094042456, 0.1802099977174161, 0.180324126911664, 0.18043825610591188, 0.18043825610591188, 0.18066651449440768, 0.18089477288290345, 0.18100890207715134, 0.18169367724263866, 0.18192193563113446, 0.18215019401963023, 0.18260671079662177, 0.18260671079662177, 0.18306322757361332, 0.183405615156357, 0.1835197443506049, 0.1835197443506049, 0.1842045195160922, 0.1843186487103401, 0.1843186487103401, 0.18488929468157955, 0.18511755307007532, 0.18545994065281898, 0.18614471581830633, 0.18614471581830633, 0.18705774937228944, 0.18728600776078522, 0.18762839534352888, 0.18808491212052042, 0.18831317050901622, 0.18865555809175988, 0.18899794567450354, 0.19002510842273454, 0.19002510842273454, 0.19013923761698243, 0.19128052955946132, 0.1913946587537092, 0.19185117553070075, 0.19196530472494863, 0.19196530472494863, 0.19219356311344443, 0.1924218215019402, 0.19595982652362473, 0.19664460168911208, 0.19710111846610362, 0.19767176443734308, 0.19790002282583885, 0.19881305637982197, 0.19892718557406985, 0.19915544396256563, 0.1992695731568135, 0.1992695731568135, 0.19949783154530928, 0.19961196073955717, 0.19995434832230086, 0.19995434832230086, 0.2014380278475234, 0.2015521570417713, 0.20212280301301072, 0.2022369322072586, 0.2022369322072586, 0.2023510614015065, 0.20349235334398538, 0.20372061173248115, 0.20417712850947273, 0.20417712850947273, 0.20520429125770373, 0.20634558320018262, 0.2064597123944305, 0.20668797078292628, 0.20680209997717416, 0.20703035836566994, 0.20714448755991782, 0.20714448755991782, 0.2072586167541657, 0.20771513353115728, 0.20794339191965305, 0.2083999086966446, 0.21034010499885872, 0.21068249258160238, 0.21193791371832915, 0.21216617210682492, 0.2123944304953207, 0.21285094727231227, 0.21307920566080804, 0.2133074640493038, 0.21353572243779959, 0.21353572243779959, 0.21376398082629536, 0.21410636840903904, 0.21433462679753482, 0.21467701438027847, 0.21490527276877425, 0.21501940196302213, 0.2152476603515179, 0.2154759187400137, 0.21570417712850948, 0.21581830632275736, 0.21604656471125314, 0.2162748230997489, 0.2166172106824926, 0.2166172106824926, 0.21695959826523625, 0.21707372745948414, 0.2173019858479799, 0.21753024423647568, 0.21787263181921937, 0.21810089020771514, 0.21810089020771514, 0.21821501940196303, 0.21867153617895457, 0.21878566537320246, 0.21901392376169823, 0.21935631134444192, 0.21981282812143346, 0.21981282812143346, 0.22403560830860533, 0.22414973750285322, 0.22414973750285322, 0.22437799589134902, 0.22437799589134902, 0.2246062542798448, 0.22494864186258845, 0.22620406299931523, 0.2263181921935631, 0.2263181921935631, 0.22654645058205888, 0.22688883816480257, 0.227459484136042, 0.22814425930152932, 0.22825838849577723, 0.228486646884273, 0.228486646884273, 0.22894316366126455, 0.22894316366126455, 0.2292855512440082, 0.229513809632504, 0.229513809632504, 0.2296279388267519, 0.2296279388267519, 0.22997032640949555, 0.2304268431864871, 0.23111161835197444, 0.23156813512896599, 0.23179639351746176, 0.23202465190595756, 0.23213878110020544, 0.2324811686829491, 0.23305181465418853, 0.23373658981967588, 0.23601917370463366, 0.23636156128737731, 0.2364756904816252, 0.23738872403560832, 0.23773111161835198, 0.23887240356083086, 0.23910066194932664, 0.24104085825154076, 0.24115498744578864, 0.24218215019401962, 0.24218215019401962, 0.24229627938826753, 0.24309518374800274, 0.2434375713307464, 0.24389408810773797, 0.24400821730198585, 0.2443506048847295, 0.2443506048847295, 0.24457886327322528, 0.24492125085596897, 0.24526363843871263, 0.24583428440995206, 0.24629080118694363, 0.24697557635243095, 0.2473179639351746, 0.2475462223236704, 0.24777448071216618, 0.24811686829490984, 0.24891577265464507, 0.24925816023738873, 0.2493722894316366, 0.24960054782013238, 0.24960054782013238, 0.24982880620862816, 0.2503994521798676, 0.2505135813741155, 0.25062771056836336, 0.25097009815110705, 0.2511983565396028, 0.25131248573385073, 0.25233964848208174, 0.2525679068705775, 0.25268203606482537, 0.25291029445332114, 0.25291029445332114, 0.2531385528418169, 0.2535950696188085, 0.25393745720155214, 0.25393745720155214, 0.25405158639580006, 0.2542798447842958, 0.2543939739785437, 0.2545081031727916, 0.25473636156128737, 0.25473636156128737, 0.2548504907555353, 0.25507874914403106, 0.2551928783382789, 0.2554211367267747, 0.2554211367267747, 0.25564939511527046, 0.25599178269801415, 0.2562200410865099, 0.2562200410865099, 0.2564482994750057, 0.25667655786350146, 0.2567906870577494, 0.25736133302898884, 0.2575895914174846, 0.258160237388724, 0.25838849577721984, 0.25873088335996347, 0.2588450125542114, 0.2588450125542114, 0.2595297877196987, 0.2595297877196987, 0.2597580461081945, 0.26010043369093816, 0.2605569504679297, 0.26067107966217756, 0.26135585482766494, 0.2615841132161607, 0.2615841132161607, 0.26169824241040857, 0.26238301757589594, 0.2636384387126227, 0.26375256790687057, 0.26432321387811003, 0.2644373430723579, 0.26500798904359735, 0.26535037662634103, 0.2654645058205889, 0.26569276420908466, 0.26614928098607626, 0.2662634101803241, 0.2666057977630678, 0.26694818534581144, 0.2671764437343072, 0.2672905729285551, 0.26740470212280304, 0.2678612188997946, 0.2685459940652819, 0.2687742524537777, 0.2687742524537777, 0.26900251084227345, 0.26934489842501713, 0.26934489842501713, 0.269459027619265, 0.27002967359050445, 0.270486190367496, 0.2716274823099749, 0.2718557406984707, 0.2723122574754622, 0.2724263866697101, 0.2726546450582059, 0.2732252910294453, 0.27333942022369323, 0.27402419538918055, 0.2742524537776763, 0.2744807121661721, 0.2763067792741383, 0.2768774252453778, 0.2777904587993609, 0.27801871718785665, 0.2788176215475919, 0.2788176215475919, 0.2789317507418398, 0.2824697557635243, 0.2825838849577722, 0.2845240812599863, 0.2846382104542342, 0.28486646884273, 0.28486646884273, 0.2853229856197215, 0.28577950239671307, 0.2864642775622004, 0.2868066651449441, 0.286920794339192, 0.2872631819219356, 0.28737731111618353, 0.28737731111618353, 0.2876055695046793, 0.287947957087423, 0.287947957087423, 0.28817621547591876, 0.2882903446701666, 0.2886327322529103, 0.28874686144715817, 0.28897511983565394, 0.29137183291485963, 0.2925131248573385, 0.29308377082857795, 0.2933120292170737, 0.29376854599406527, 0.29445332115955264, 0.2945674503538005, 0.29502396713079204, 0.29616525907327096, 0.2962793882675188, 0.2968500342387583, 0.2969641634330062, 0.2973065510157498, 0.29742068020999773, 0.2976489385984935, 0.2989043597352203, 0.2999315224834513, 0.30004565167769914, 0.30073042684318646, 0.3008445560374344, 0.30118694362017806, 0.30141520200867383, 0.3016434603971696, 0.30209997717416115, 0.3025564939511527, 0.30278475233964847, 0.30301301072814424, 0.30346952750513584, 0.3035836566993837, 0.30415430267062316, 0.304268431864871, 0.3044966902533668, 0.3046108194476147, 0.3048390778361105, 0.3049532070303584, 0.30540972380734993, 0.3056379821958457, 0.30609449897283725, 0.306322757361333, 0.30643688655558093, 0.30814882446929925, 0.308377082857795, 0.3098607623830176, 0.31008902077151335, 0.3105455375485049, 0.3108879251312486, 0.31111618351974435, 0.31145857110248804, 0.3119150878794796, 0.3122574754622232, 0.3127139922392148, 0.3127139922392148, 0.3129422506277106, 0.3132846382104542, 0.31351289659895, 0.3136270257931979, 0.3136270257931979, 0.3138552841816937, 0.3139694133759416, 0.3143118009586852, 0.32013238986532755, 0.3209312942250628, 0.32115955261355855, 0.32287149052727687, 0.3233280073042684, 0.32606710796621774, 0.32618123716046565, 0.3262953663547135, 0.32652362474320934, 0.32880620862816706, 0.32880620862816706, 0.3325724720383474, 0.33280073042684316, 0.3329148596210911, 0.33314311800958685, 0.3335996347865784, 0.3339420223693221, 0.3349691851175531, 0.3349691851175531, 0.33553983108879254, 0.33645286464277563, 0.33645286464277563, 0.3365669938370235, 0.3375941565852545, 0.3380506733622461, 0.3383930609449897, 0.33884957772198127, 0.33907783611047704, 0.33919196530472495, 0.3396484820817165, 0.3397626112759644, 0.3399908696644602, 0.3413604199954348, 0.34147454918968273, 0.3417028075781785, 0.34181693677242636, 0.34215932435517005, 0.3426158411321616, 0.34330061629764896, 0.34352887468614474, 0.3437571330746405, 0.3439853914631363, 0.34455603743437574, 0.34489842501711937, 0.34512668340561514, 0.3453549417941109, 0.3455832001826067, 0.34649623373658983, 0.34649623373658983, 0.3466103629308377, 0.34718100890207715, 0.34729513809632506, 0.3474092672905729, 0.34752339648482083, 0.3477516548733166, 0.3479799132618124, 0.34820817165030815, 0.34855055923305184, 0.34889294681579547, 0.34912120520429124, 0.349349463592787, 0.3495777219812828, 0.3498059803697786, 0.34992010956402647, 0.35014836795252224, 0.350376626341018, 0.3506048847295138, 0.35083314311800956, 0.35083314311800956, 0.3510614015065054, 0.35128965989500116, 0.3526592102259758, 0.35288746861447157, 0.35322985619721525, 0.35357224377995894, 0.3536863729742068, 0.3540287605569505, 0.35448527733394203, 0.35528418169367726, 0.3553983108879251, 0.3559689568591646, 0.3560830860534125, 0.35619721524766035, 0.35688199041314767, 0.35733850719013927, 0.35733850719013927, 0.35756676557863504, 0.3576808947728829, 0.3576808947728829, 0.35790915316137867, 0.3587080575211139, 0.36452864642775623, 0.364756904816252, 0.36624058434147455, 0.3666971011184661, 0.3670394887012098, 0.36726774708970555, 0.36726774708970555, 0.3684090390321844, 0.36852316822643233, 0.3689796850034239, 0.3690938141976718, 0.37023510614015065, 0.3714905272768774, 0.3714905272768774, 0.37160465647112534, 0.3734307235790915, 0.37434375713307466, 0.3746861447158183, 0.37525679068705775, 0.37537091988130566, 0.37559917826980144, 0.3758274366582972, 0.3768545994065282, 0.37696872860077607, 0.37696872860077607, 0.37753937457201553, 0.3779958913490071, 0.37822414973750285, 0.37913718329148594, 0.3797078292627254, 0.3800502168454691, 0.38016434603971694, 0.3803926044282127, 0.3807349920109564, 0.3827893175074184, 0.3830175758959142, 0.38358822186715363, 0.38393060944989726, 0.38415886783839304, 0.3871262268888382, 0.38724035608308605, 0.3880392604428213, 0.3884957772198128, 0.3898653275507875, 0.39032184432777906, 0.39328920337822415, 0.39340333257247206, 0.39340333257247206, 0.3935174617667199, 0.3938598493494636, 0.39431636612645515, 0.3945446245149509, 0.3945446245149509, 0.39557178726318193, 0.39659895001141293, 0.39694133759415656, 0.39739785437114816, 0.3977402419538918, 0.39819675873088334, 0.3984250171193791, 0.39865327550787494, 0.3988815338963707, 0.39933805067336225, 0.399566309061858, 0.3997945674503538, 0.4001369550330975, 0.40036521342159326, 0.4010499885870806, 0.4011641177813285, 0.40230540972380735, 0.40321844327779044, 0.4086966446016891, 0.4097238073499201, 0.40995206573841586, 0.4100661949326638, 0.4128052955946131, 0.412919424788861, 0.4131476831773568, 0.41326181237160464, 0.41428897511983565, 0.41497375028532296, 0.4152020086738188, 0.41543026706231456, 0.4158867838393061, 0.4158867838393061, 0.4179411093357681, 0.41805523853001597, 0.4185117553070075, 0.4187400136955033, 0.4191965304724949, 0.4197671764437343, 0.42022369322072584, 0.4205660808034695, 0.42125085596895684, 0.42170737274594844, 0.4219356311344442, 0.42227801871718784, 0.4227345354941794, 0.4230769230769231, 0.42330518146541884, 0.4235334398539146, 0.4237616982424104, 0.424218215019402, 0.42433234421364985, 0.42547363615612876, 0.4255877653503766, 0.4258160237388724, 0.4259301529331203, 0.4269573156813513, 0.42707144487559917, 0.42707144487559917, 0.42729970326409494, 0.42764209084683863, 0.4280986076238302, 0.4282127368180781, 0.42946815795480486, 0.42969641634330064, 0.4298105455375485, 0.4301529331202922, 0.43026706231454004, 0.4304953207030358, 0.4311800958685232, 0.43129422506277104, 0.4331202921707373, 0.4335768089477288, 0.4338050673362246, 0.4346039716959598, 0.43471810089020774, 0.4351746176671993, 0.4351746176671993, 0.43540287605569505, 0.4356311344441908, 0.43574526363843874, 0.43631590960967814, 0.4372289431636613, 0.43734307235790915, 0.43734307235790915, 0.43745720155215706, 0.43745720155215706, 0.43825610591189224, 0.43871262268888384, 0.43871262268888384, 0.4389408810773796, 0.4391691394658754, 0.43928326866012324, 0.439511527048619, 0.44008217301985847, 0.4401963022141064, 0.44053868979685, 0.4409952065738416, 0.4409952065738416, 0.44110933576808947, 0.44110933576808947, 0.4412234649623374, 0.44145172335083316, 0.44167998173932893, 0.44270714448755993, 0.44327779045879934, 0.44339191965304725, 0.44339191965304725, 0.443620178041543, 0.4438484364300388, 0.4439625656242867, 0.44407669481853457, 0.444647340789774, 0.4452179867610135, 0.44544624514950926, 0.44567450353800503, 0.4465875370919881, 0.44670166628623603, 0.4471581830632276, 0.44727231225747544, 0.4478429582287149, 0.4481853458114586, 0.44841360419995435, 0.4485277333942022, 0.44875599178269804, 0.44909837936544167, 0.44932663775393744, 0.44944076694818536, 0.4495548961424332, 0.4498972837251769, 0.4500114129194248, 0.4505820588906642, 0.45069618808491213, 0.451837480027391, 0.45275051358137414, 0.4535494179411093, 0.4540059347181009, 0.45446245149509246, 0.45469070988358823, 0.454918968272084, 0.4550330974663319, 0.4582287149052728, 0.45834284409952064, 0.4586852316822643, 0.4601689112074869, 0.4602830404017348, 0.46073955717872633, 0.4616525907327094, 0.4616525907327094, 0.46233736589819674, 0.46245149509244465, 0.464163433006163, 0.46439169139465875, 0.4649623373658982, 0.46507646656014606, 0.4659895001141292, 0.46678840447386444, 0.4670166628623602, 0.46735905044510384, 0.4675873088335996, 0.4678155672220954, 0.4679296964163433, 0.46815795480483907, 0.468272083999087, 0.46838621319333484, 0.46850034238758276, 0.46872860077607853, 0.4688427299703264, 0.46952750513581376, 0.46975576352430953, 0.4698698927185574, 0.47454918968272086, 0.4755763524309518, 0.4756904816251997, 0.47614699840219127, 0.4762611275964392, 0.47648938598493495, 0.4768317735676786, 0.47979913261812374, 0.4800273910066195, 0.48036977858936314, 0.4807121661721068, 0.48116868294909837, 0.4812828121433463, 0.48173932892033783, 0.4820817165030815, 0.48253823328007306, 0.4833371376398083, 0.4849349463592787, 0.4859621091075097, 0.4860762383017576, 0.4868751426614928, 0.4869892718557407, 0.4872175302442365, 0.48755991782698016, 0.4879023054097238, 0.48813056379821956, 0.48847295138096325, 0.48858708057521116, 0.4946359278703492, 0.49646199497831545, 0.496918511755307, 0.4970326409495549, 0.49737502853229854, 0.497945674503538, 0.4987445788632732, 0.498972837251769, 0.49942935402876054, 0.4996576124172563, 0.5, 0.5003423875827436, 0.5005706459712395, 0.5011412919424789, 0.5011412919424789, 0.5012554211367267, 0.5014836795252225, 0.5018260671079662, 0.5019401963022141, 0.5019401963022141, 0.5021684546907099, 0.5026249714677015, 0.5027391006619494, 0.5029673590504451, 0.5045651677699156, 0.505135813741155, 0.506162976489386, 0.5066194932663776, 0.5075325268203607, 0.5077607852088565, 0.508217301985848, 0.5084455603743437, 0.5086738187628396, 0.5090162063455832, 0.509244464734079, 0.5097009815110706, 0.5100433690938142, 0.5101574982880621, 0.5106140150650537, 0.5107281442593016, 0.5109564026477973, 0.5114129194247888, 0.5116411778132847, 0.5117553070075326, 0.5119835653960283, 0.5120976945902762, 0.5120976945902762, 0.5125542113672678, 0.5146085368637298, 0.5149509244464734, 0.5150650536407213, 0.5155215704177128, 0.5159780871947044, 0.5159780871947044, 0.51837480027391, 0.5192878338278932, 0.519516092216389, 0.5199726089933805, 0.5202008673818763, 0.5203149965761241, 0.5206573841588679, 0.5230540972380735, 0.5231682264323214, 0.5232823556265693, 0.523510614015065, 0.5241953891805524, 0.5244236475690481, 0.525564939511527, 0.5263638438712622, 0.5264779730655101, 0.526706231454006, 0.5285322985619721, 0.5288746861447158, 0.5293312029217073, 0.5318420451951609, 0.5319561743894088, 0.5335539831088792, 0.5336681123031272, 0.5337822414973751, 0.5341246290801187, 0.5342387582743666, 0.5384615384615384, 0.5386897968500343, 0.5390321844327779, 0.5393745720155215, 0.5427984478429583, 0.5431408354257019, 0.5432549646199498, 0.5453092901164118, 0.5454234193106596, 0.5457658068934034, 0.546108194476147, 0.546108194476147, 0.5463364528646428, 0.5488472951380964, 0.5504451038575667, 0.5511298790230541, 0.551244008217302, 0.5531842045195161, 0.5534124629080118, 0.5537548504907556, 0.5539831088792513, 0.5542113672677471, 0.5544396256562428, 0.5545537548504907, 0.5547820132389866, 0.5572928555124401, 0.5574069847066879, 0.5577493722894317, 0.5591189226204063, 0.5594613102031499, 0.5595754393973978, 0.5602602145628852, 0.5604884729513809, 0.5607167313398768, 0.5611732481168683, 0.5617438940881078, 0.5620862816708514, 0.5623145400593472, 0.5682492581602374, 0.5684775165487331, 0.568591645742981, 0.568705774937229, 0.5688199041314769, 0.5690481625199726, 0.5691622917142205, 0.569618808491212, 0.5700753252682036, 0.5703035836566994, 0.5711024880164346, 0.571673133987674, 0.5723579091531614, 0.5727002967359051, 0.5729285551244008, 0.5754393973978543, 0.5756676557863502, 0.5757817849805981, 0.5765806893403332, 0.5779502396713079, 0.5782926272540516, 0.5785208856425473, 0.5787491440310432, 0.5789774024195389, 0.5795480483907783, 0.5797763067792742, 0.5801186943620178, 0.5805752111390093, 0.5805752111390093, 0.5810317279160009, 0.5811458571102488, 0.5905044510385756, 0.5909609678155672, 0.591189226204063, 0.5916457429810545, 0.5918740013695504, 0.5923305181465419, 0.5947272312257476, 0.5949554896142433, 0.5967815567222096, 0.5972380734992011, 0.5989500114129194, 0.5992923989956631, 0.6027162748230998, 0.6027162748230998, 0.6029445332115956, 0.6036293083770828, 0.6039716959598265, 0.6046564711253138, 0.6048847295138097, 0.6051129879023054, 0.6051129879023054, 0.6053412462908012, 0.6073955717872632, 0.6076238301757589, 0.6087651221182379, 0.6088792513124858, 0.6088792513124858, 0.6091075097009815, 0.6093357680894773, 0.6094498972837252, 0.609678155672221, 0.6097922848664689, 0.6102488016434604, 0.6104770600319561, 0.6128737731111619, 0.6131020314996576, 0.6153846153846154, 0.6159552613558549, 0.6161835197443506, 0.6164117781328464, 0.6165259073270942, 0.61675416571559, 0.616868294909838, 0.6170965532983337, 0.6173248116868295, 0.6177813284638211, 0.617895457658069, 0.6183519744350605, 0.6188084912120521, 0.6194932663775393, 0.6204062999315225, 0.6208628167085141, 0.6216617210682492, 0.6218899794567451, 0.6221182378452408, 0.6221182378452408, 0.6223464962337366, 0.6226888838164802, 0.6229171422049761, 0.6233736589819676, 0.6233736589819676, 0.6244008217301986, 0.6304496690253367, 0.6313627025793198, 0.6317050901620634, 0.6325039945217987, 0.6328463821045424, 0.6333028988815339, 0.6334170280757818, 0.6336452864642775, 0.6339876740470213, 0.6371832914859621, 0.6375256790687057, 0.6396941337594156, 0.6400365213421593, 0.6402647797306551, 0.640378908924903, 0.6408354257018946, 0.6410636840903903, 0.641406071673134, 0.6415202008673819, 0.642433234421365, 0.6425473636156128, 0.6428897511983566, 0.6430038803926045, 0.6436886555580917, 0.6438027847523397, 0.6439169139465876, 0.6440310431408355, 0.6442593015293312, 0.6448299475005707, 0.6449440766948186, 0.6461994978315453, 0.646541885414289, 0.6471125313855284, 0.6479114357452637, 0.6480255649395116, 0.6493951152704862, 0.6496233736589819, 0.6501940196302214, 0.6506505364072129, 0.6513353115727003, 0.6514494407669482, 0.6517918283496918, 0.6533896370691623, 0.653617895457658, 0.6539602830404018, 0.6617210682492581, 0.6659438484364301, 0.6661721068249258, 0.6673133987674047, 0.6676557863501483, 0.6677699155443962, 0.6681123031271399, 0.6682264323213878, 0.6685688199041315, 0.6686829490983793, 0.6689112074868752, 0.6690253366811231, 0.6693677242638667, 0.6694818534581146, 0.6706231454005934, 0.6710796621775851, 0.6715361789545766, 0.6716503081488244, 0.6730198584797992, 0.673133987674047, 0.6733622460625428, 0.674161150422278, 0.6743894088107738, 0.6750741839762612, 0.6756448299475005, 0.6759872175302443, 0.6771285094727231, 0.6780415430267063, 0.678269801415202, 0.6783839306094499, 0.6787263181921935, 0.6790687057749373, 0.679296964163433, 0.6794110933576809, 0.6796393517461766, 0.6797534809404245, 0.6804382561059119, 0.6808947728829035, 0.6810089020771514, 0.6814654188541429, 0.6818078064368865, 0.6822643232138781, 0.6828349691851175, 0.6870577493722895, 0.6876283953435288, 0.6881990413147683, 0.6903674960054782, 0.690595754393974, 0.6910522711709656, 0.6937913718329148, 0.6942478886099064, 0.6959598265236248, 0.699726089933805, 0.7001826067107966, 0.7002967359050445, 0.7005249942935403, 0.7045195160922164, 0.704976032869208, 0.7098835882218671, 0.7106824925816023, 0.7109107509700981, 0.711139009358594, 0.7112531385528418, 0.7128509472723122, 0.7135357224377996, 0.7136498516320475, 0.7136498516320475, 0.7157041771285094, 0.7162748230997489, 0.7162748230997489, 0.7165030814882447, 0.7167313398767404, 0.717187856653732, 0.7175302442364757, 0.7177585026249714, 0.7185574069847067, 0.7206117324811687, 0.7211823784524082, 0.7216388952293997, 0.7218671536178954, 0.7219812828121434, 0.722323670394887, 0.7240356083086054, 0.7242638666971011, 0.7248345126683405, 0.7255192878338279, 0.7260899338050674, 0.7265464505820589, 0.7268888381648025, 0.7273453549417941, 0.7275736133302899, 0.7279160009130335, 0.7282583884957772, 0.7303127139922392, 0.730540972380735, 0.7307692307692307, 0.7317963935174617, 0.7319105227117096, 0.7327094270714449, 0.7333942022369322, 0.7403560830860534, 0.7404702122803013, 0.7406984706687971, 0.7408125998630449, 0.7420680209997718, 0.7425245377767633, 0.7460625427984479, 0.7464049303811915, 0.746861447158183, 0.746975576352431, 0.7472038347409268, 0.7488016434603971, 0.748915772654645, 0.7493722894316366, 0.7497146770143803, 0.750057064597124, 0.7502853229856197, 0.7506277105683634, 0.7507418397626113, 0.751084227345355, 0.7515407441223465, 0.7517690025108422, 0.7527961652590732, 0.7537091988130564, 0.7538233280073042, 0.755192878338279, 0.7559917826980141, 0.7571330746404931, 0.7573613330289888, 0.7577037206117325, 0.7578178498059803, 0.7579319790002282, 0.7580461081944762, 0.7582743665829719, 0.7586167541657156, 0.7598721753024423, 0.7602145628851861, 0.7604428212736818, 0.7634101803241269, 0.7638666971011184, 0.7645514722666058, 0.7648938598493494, 0.7652362474320932, 0.7652362474320932, 0.7656927642090847, 0.7658068934033325, 0.7667199269573157, 0.7670623145400594, 0.7671764437343073, 0.7675188313170509, 0.7677470897055467, 0.7678612188997945, 0.7682036064825383, 0.7683177356767861, 0.7727687742524538, 0.7741383245834285, 0.7744807121661721, 0.77459484136042, 0.7748230997489157, 0.7758502624971467, 0.7760785208856426, 0.7814425930152933, 0.7815567222095412, 0.781784980598037, 0.7818991097922848, 0.7822414973750286, 0.7822414973750286, 0.7834969185117553, 0.7836110477060032, 0.7839534352887468, 0.7840675644829947, 0.7845240812599863, 0.7846382104542342, 0.7856653732024652, 0.7860077607852088, 0.7866925359506962, 0.7868066651449441, 0.787833827893175, 0.7881762154759188, 0.7885186030586624, 0.7922848664688428, 0.7928555124400821, 0.79296964163433, 0.795023967130792, 0.7955946131020315, 0.7959370006847751, 0.7965076466560146, 0.7967359050445104, 0.7978771969869892, 0.7979913261812371, 0.7984478429582287, 0.7986761013467245, 0.7987902305409724, 0.8000456516776991, 0.8001597808719471, 0.8003880392604428, 0.8007304268431865, 0.8028988815338963, 0.8036977858936316, 0.8040401734763752, 0.8050673362246062, 0.8058662405843414, 0.8060944989728372, 0.8067792741383246, 0.8071216617210683, 0.8073499201095641, 0.8079205660808034, 0.8097466331887697, 0.8143118009586853, 0.8151107053184204, 0.8154530929011641, 0.815567222095412, 0.8157954804839078, 0.8159096096781556, 0.8159096096781556, 0.8163661264551473, 0.8178498059803698, 0.822757361333029, 0.8229856197215247, 0.8232138781100206, 0.8236703948870121, 0.8242410408582516, 0.8252682036064826, 0.8254964619949783, 0.8256105911892262, 0.825838849577722, 0.8259529787719698, 0.8266377539374572, 0.8272083999086967, 0.8274366582971924, 0.8277790458799361, 0.827893175074184, 0.8282355626569277, 0.8284638210454234, 0.8285779502396713, 0.8288062086281671, 0.8292627254051587, 0.8293768545994066, 0.8318876968728601, 0.8321159552613558, 0.8324583428440995, 0.8325724720383474, 0.8328007304268432, 0.8331431180095868, 0.8346267975348094, 0.8389637069162291, 0.8418169367724264, 0.8502624971467702, 0.8503766263410181, 0.8511755307007532, 0.8520885642547363, 0.8523168226432322, 0.8524309518374801, 0.8524309518374801, 0.8526592102259758, 0.8543711481396942, 0.8547135357224378, 0.8551700524994293, 0.8566537320246519, 0.8572243779958914, 0.8574526363843872, 0.8576808947728829, 0.8577950239671308, 0.8581374115498744, 0.8583656699383703, 0.8592787034923534, 0.8593928326866013, 0.8598493494635928, 0.8609906414060716, 0.869892718557407, 0.8703492353343986, 0.8710340104998858, 0.8712622688883817, 0.871947044053869, 0.8720611732481168, 0.8725176900251084, 0.8727459484136042, 0.8730883359963478, 0.8749144031043141, 0.8766263410180324, 0.8767404702122803, 0.8771969869892718, 0.8786806665144944, 0.8789089249029902, 0.8792513124857338, 0.8805067336224607, 0.883131705090162, 0.8854142889751199, 0.8856425473636156, 0.8858708057521114, 0.886213193334855, 0.8864414517233509, 0.8865555809175987, 0.8868979685003424, 0.8870120976945903, 0.8875827436658297, 0.888267518831317, 0.8897511983565396, 0.8898653275507875, 0.8902077151335311, 0.890321844327779, 0.8994521798676102, 0.9010499885870806, 0.9012782469755763, 0.90162063455832, 0.9021912805295594, 0.9025336681123032, 0.902647797306551, 0.9039032184432778, 0.9043597352202694, 0.9044738644145173, 0.904702122803013, 0.9048162519972609, 0.9053868979685004, 0.9056151563569961, 0.9058434147454919, 0.9062999315224834, 0.9083542570189455, 0.9086966446016891, 0.908810773795937, 0.9097238073499201, 0.9101803241269116, 0.910865099292399, 0.9112074868751426, 0.91189226204063, 0.9122346496233736, 0.9153161378680666, 0.9154302670623146, 0.9164574298105456, 0.9167998173932892, 0.917028075781785, 0.9195389180552386, 0.9197671764437343, 0.9198813056379822, 0.9204519516092217, 0.9206802099977174, 0.9212508559689568, 0.9225062771056837, 0.9276420908468386, 0.9277562200410865, 0.9299246747317964, 0.930381191508788, 0.9308377082857795, 0.9342615841132161, 0.9347181008902077, 0.9351746176671992, 0.9356311344441908, 0.9359735220269345, 0.9360876512211824, 0.9364300388039261, 0.936544167998174, 0.9372289431636612, 0.937571330746405, 0.9376854599406528, 0.9384843643003881, 0.9389408810773796, 0.9551472266605798, 0.9558320018260671, 0.9560602602145629, 0.9573156813512896, 0.9582287149052727, 0.9602830404017347, 0.9616525907327095, 0.9619949783154531, 0.9622232367039488, 0.9623373658981967, 0.9626797534809404, 0.9638210454234193, 0.9640493038119151, 0.964163433006163, 0.9650764665601461, 0.9651905957543939, 0.9654188541428897, 0.9708970554667884, 0.9710111846610363, 0.9729513809632504, 0.9736361561287378, 0.974435060488473, 0.9768317735676786, 0.977402419538918, 0.9796850034238759, 0.9799132618123716, 0.9808262953663547, 0.9809404245606026, 0.9812828121433462, 0.9871034010499886, 0.9872175302442365, 0.9882446929924674, 0.9883588221867153, 0.9891577265464506, 0.9893859849349463, 0.9937228943163662, 0.9940652818991098, 0.9944076694818534, 0.9952065738415887, 0.9957772198128281, 0.9962337365898197, 0.9970326409495549, 0.9971467701438028, 0.9997717416115042, 1.0]
        #set FPR and default will be 0.05
        self.FPR=0.05
        if FPR:
             self.FPR= FPR
        
        #load conf file
        if conf_file:
            if smp:
                self.ParseTFconfig(conf_file,smp)
            else:
                self.ParseTFconfig(conf_file)
            
            self.all_match()#get all the PS and US Score and calculate Z value
            self.decoy_identify()#add all the feature
    
    def ParseTFconfig(self, conf_file,smp=None):
        TFconf=open(conf_file,"r")
        
        for line in TFconf:
            words=line.split('=')
            if len(words) < 2:
                continue
            else:
                file_type=words[0].strip()
                file_path=words[1].strip()


#            if file_type[:3] == 'Seq':
#                if os.path.exists(file_path):
#                    if file_type[3] in self.Seqname_dict.keys():
#                        self.Seqname_dict[file_type[3]].update({'Sequence_file':file_path})
#                    else:
#                        self.Seqname_dict[file_type[3]] = {'Sequence_file':file_path}
#                else:
#                    if file_type == 'SequenceNumber':
#                        continue
#                    else:
#                    #error
#                        print ("no seqence file")
                if file_type[:2] == 'Ct':
                    Ct_number = file_type.split('=')[0]
                    Ct_number = Ct_number.split('Ct')[1]
                    if os.path.exists(file_path):
                        if Ct_number in self.Seqname_dict.keys():
                            self.Seqname_dict[Ct_number].update({'CT_file':file_path})
                        else:
                            self.Seqname_dict[Ct_number] = {'CT_file':file_path}
                    else:
                        if smp:
                                subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                
                                if Ct_number in self.Seqname_dict.keys():
                                    self.Seqname_dict[Ct_number].update({'CT_file':file_path})
                                else:
                                    self.Seqname_dict[Ct_number] = {'CT_file':file_path}
                        else:   
                                subprocess.call(["TurboFold",conf_file],env=my_env)
                                
                                if Ct_number in self.Seqname_dict.keys():
                                    self.Seqname_dict[Ct_number].update({'CT_file':file_path})
                                else:
                                    self.Seqname_dict[Ct_number] = {'CT_file':file_path}
                elif file_type == 'OutAln':
                    # import alignment
                    if os.path.exists(file_path):
                        self.read_algn(file_path)
                        self.algn_path = file_path
                    else:
                        if smp:
                                subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                if os.path.exists(file_path):
                                    self.read_algn(file_path)
                                    self.algn_path = file_path
                        else:   
                                subprocess.call(["TurboFold",conf_file],env=my_env)
                                if os.path.exists(file_path):
                                    self.read_algn(file_path)
                                    self.algn_path = file_path
                elif file_type[:4] == 'Save' and file_type != 'SaveFiles' :
                    #import pair probabilities
                    Save_number = file_type.split('=')[0]
                    Save_number = Save_number.split('Save')[1]
                    pp_file = (".").join(file_path.split(".")[:-1])+".pp"
                    if os.path.exists(file_path):
                        
                        if Save_number in self.Seqname_dict.keys():
                            self.Seqname_dict[Save_number].update({'Save_file':file_path})
                        else:
                            self.Seqname_dict[Save_number] = {'Save_file':file_path}
                    if not os.path.exists(file_path):
                        if not os.path.exists(pp_file):
                            if smp:
                                subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                
                                if Save_number in self.Seqname_dict.keys():
                                    self.Seqname_dict[Save_number].update({'Save_file':file_path})
                                else:
                                    self.Seqname_dict[Save_number] = {'Save_file':file_path}
                            else:   
                                subprocess.call(["TurboFold",conf_file],env=my_env)
                                
                                if Save_number in self.Seqname_dict.keys():
                                    self.Seqname_dict[Save_number].update({'Save_file':file_path})
                                else:
                                    self.Seqname_dict[Save_number] = {'Save_file':file_path}
                        else:
                            self.probabilities[Save_number]=PP_Obj(pp_file)
                            
                            if Save_number in self.Seqname_dict.keys():
                                self.Seqname_dict[Save_number].update({'Save_file':file_path})
                            else:
                                self.Seqname_dict[Save_number] = {'Save_file':file_path}
                    else:
                        self.probabilities[Save_number]=PP_Obj(file_path)
                        
                        if Save_number in self.Seqname_dict.keys():
                            self.Seqname_dict[Save_number].update({'Save_file':file_path})
                        else:
                            self.Seqname_dict[Save_number] = {'Save_file':file_path}
        
                elif file_type == 'OutCT':
                    #import ct file 
                    file_path = file_path.replace('{','')
                    file_path = file_path.replace('}','')
                    file_path_list = file_path.split(';')
                    try:
                        file_path_list.remove('')
                    except:
                        pass
                    for seqs_number in range(len(file_path_list)):
                        if os.path.exists(file_path_list[seqs_number]):
                            if not str(seqs_number+1) in self.Seqname_dict.keys():
                                self.Seqname_dict[str(seqs_number+1)] = {'CT_file':file_path_list[seqs_number].rstrip()}
                            else:
                                self.Seqname_dict[str(seqs_number+1)].update({'CT_file':file_path_list[seqs_number].rstrip()})
                        else:
                            if smp:
                                subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                if not str(seqs_number+1) in self.Seqname_dict.keys():
                                    self.Seqname_dict[str(seqs_number+1)] = {'CT_file':file_path_list[seqs_number].rstrip()}
                                else:
                                    self.Seqname_dict[str(seqs_number+1)].update({'CT_file':file_path_list[seqs_number].rstrip()})
                            else:   
                                subprocess.call(["TurboFold",conf_file],env=my_env)
                                if not str(seqs_number+1) in self.Seqname_dict.keys():
                                    self.Seqname_dict[str(seqs_number+1)] = {'CT_file':file_path_list[seqs_number].rstrip()}
                                else:
                                    self.Seqname_dict[str(seqs_number+1)].update({'CT_file':file_path_list[seqs_number].rstrip()})
                
                elif file_type == 'SaveFiles':
                    #import pfs or pp file
                    file_path = file_path.replace('{','')
                    file_path = file_path.replace('}','')
                    file_path_list = file_path.split(';')
                    try:
                        file_path_list.remove('')
                    except:
                        pass
                    for seqs_number in range(len(file_path_list)):
                        if not str(seqs_number+1) in self.Seqname_dict.keys():
                            self.Seqname_dict[str(seqs_number+1)] = {'Save_file':file_path_list[seqs_number].rstrip()}
                        else:
                            self.Seqname_dict[str(seqs_number+1)].update({'Save_file':file_path_list[seqs_number].rstrip()})
                        path_file = file_path_list[seqs_number]
                        
                        if not os.path.exists(path_file):
                            #if not pfs existed, search of pp with same file name
                            pp_file = (".").join(path_file.split(".")[:-1])+".pp"
                            if not os.path.exists(pp_file):
                                if smp:
                                    subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                else:   
                                    subprocess.call(["TurboFold",conf_file],env=my_env)
                            else:
                                self.probabilities[str(seqs_number+1)]=PP_Obj(pp_file)
                        else:
                            self.probabilities[str(seqs_number+1)]=PP_Obj(path_file)    
                
                elif file_type == 'StartingSaveFiles':
                    #import pfs file from first run of TurboFold
                    file_path = file_path.replace('{','')
                    file_path = file_path.replace('}','')
                    file_path_list = file_path.split(';')
                    try:
                        file_path_list.remove('')
                    except:
                        pass
                    for seqs_number in range(len(file_path_list)):
                        if os.path.exists(file_path_list[seqs_number]):
                            if not str(seqs_number+1) in self.Seqname_dict.keys():
                                self.Seqname_dict[str(seqs_number+1)] = {'StartingSaveFiles':file_path_list[seqs_number].rstrip()}
                            else:
                                self.Seqname_dict[str(seqs_number+1)].update({'StartingSaveFiles':file_path_list[seqs_number].rstrip()})
                        else:
                            if smp:
                                subprocess.call(["TurboFold-smp",conf_file],env=my_env)
                                if not str(seqs_number+1) in self.Seqname_dict.keys():
                                    self.Seqname_dict[str(seqs_number+1)] = {'StartingSaveFiles':file_path_list[seqs_number].rstrip()}
                                else:
                                    self.Seqname_dict[str(seqs_number+1)].update({'StartingSaveFiles':file_path_list[seqs_number].rstrip()})
                            else:   
                                subprocess.call(["TurboFold",conf_file],env=my_env)
                                if not str(seqs_number+1) in self.Seqname_dict.keys():
                                    self.Seqname_dict[str(seqs_number+1)] = {'StartingSaveFiles':file_path_list[seqs_number].rstrip()}
                                else:
                                    self.Seqname_dict[str(seqs_number+1)].update({'StartingSaveFiles':file_path_list[seqs_number].rstrip()})
        for num in range(len([ i for i in self.algn.keys()])):
            #save the name of sequence and correlated to alignment dictionary
            name = [ i for i in self.algn.keys()][num]
            num_dic = str(num+1)
            self.algn_to_Seqname_file[name] = num_dic
    
    
    def read_algn(self,filename,name_dict=None):
            """This function is used to read the output sequence alignment, which is
        in ClustalW format, then create a dictionary to record name of HM sequences 
        and the sequenceself.EX
            Argument:
                 conf_file: the path for the config file
            Returns:
                 algn: a dictionary of homlogous sequences
        
        """
            
            A=open(filename,'r').readlines()
            
            
            for line in A:
                Oneline=line.split()
                
                
                if len(Oneline)!=2:
                    continue
                
                if name_dict:
                    name = name_dict(Oneline[0])
                
                
                else:
                    name= Oneline[0]
                
                if name in self.algn.keys(): 
                    self.algn[name] = self.algn[name] + Oneline[1]
                else:
                    self.algn[name] = Oneline[1]
            
            
            
            return self.algn
    
    
    
    
    def match_soc(self,seq1,seq2):
        """match_soc 
        this function will use two sequences to calculate the pairing socres and unpairing scores, by using
        the equation: i = a nucleotide at position i, k the same 
                    PS(i,k) = square root of (i pair up * k pair up + i pair down * k pair down)
                    US(i,k) = square root(i unpair *k unpair)
        
        Arguments:
            seq1 {str}:
                the sequence is manually given
            
            seq2 {str}:
                 the sequnece is manually given, make sure not the same as the sequence 1
        
        Returns: paring socre[keys: name of sequences]=(value: paring socre of positions)
            unparing socre[keys: name of sequences]=(value: unparing socre of positions) 
        
        
        """
        # Initialize match score vector with zeros. self.algn is dicitonary of alignment of sequences
        alpha_1= [0 for i in range(len(self.algn[seq1]))]
        alpha_2= [0 for i in range(len(self.algn[seq1]))]
        
        
        Pairwise_algn, Pair_i = self.get_pairwise(seq1,seq2)
        Position_seq_1 = [ k for k in self.algn[seq1]]
        Position_seq_2 = [ k for k in self.algn[seq2]]
        total_id = 0
        match_id = 0
        for i in range(len(Position_seq_1)):
            P1 = Position_seq_1[i]
            P2 = Position_seq_2[i]
            if P1 != "-":
                if P2 !="-":
                    if P1 == P2:
                        total_id+=1
                        match_id+=1                        
                    elif P1 != P2:
                        total_id+=1
        
        
        # use i to get all the position of sequence 
        for i in range(len(self.algn[seq1])):
            if Pairwise_algn[seq1][i] != 0:
                a = Pairwise_algn[seq1][i]-1
                
                try:
                    
                    try:
                        self.probabilities[self.algn_to_Seqname_file[seq1]].prob_up(Pairwise_algn[seq2][a])
                    except:
                        print(i)
                        print(seq1)
                    try:
                        self.probabilities[self.algn_to_Seqname_file[seq2]].prob_up(a)
                    except:
                        print(seq2)
                        
                        print(i)
                    #M1 is pairing score
                    M1 = sqrt(self.probabilities[self.algn_to_Seqname_file[seq1]].prob_up(Pairwise_algn[seq2][a]-1)*self.probabilities[self.algn_to_Seqname_file[seq2]].prob_up(a))
                    M1 += sqrt(self.probabilities[self.algn_to_Seqname_file[seq1]].prob_down(Pairwise_algn[seq2][a]-1)*self.probabilities[self.algn_to_Seqname_file[seq2]].prob_down(a))
                    
                    #A2 is unpairing score
                    A2 = sqrt(self.probabilities[self.algn_to_Seqname_file[seq1]].unpair(Pairwise_algn[seq2][a]-1)*self.probabilities[self.algn_to_Seqname_file[seq2]].unpair(a))

#                    if M1 != 0 or A2 != 0:
                    alpha_1[i] = M1
                    alpha_2 [i] = A2
                
                
                
                except KeyError:
                    print('missing seq')

#            
        return alpha_1, alpha_2
    
    def all_match(self):
        """
        Get all the pairing and unpairing score for each sequence
        """
        
        #get sequence name in alignment
        seq_list = [i for i in self.algn.keys()]
        N= len(seq_list)
        #run through all the sequences
        for i in range(N):
            sequence_1 = seq_list[i]
            #run through all the sequences other than i
            for m in range(N):
                if m != i:
                    alpha_1, alpha_2 = self.match_soc(sequence_1,seq_list[m])
                    if sequence_1 in self.alpha_1.keys():
                        #add all the pairing and unpairing score for aligned position
                        for p in range(len(self.alpha_1[sequence_1])):
                            self.alpha_1[sequence_1][p] = self.alpha_1[sequence_1][p] + alpha_1[p]
                            self.alpha_2[sequence_1][p] = self.alpha_2[sequence_1][p] + alpha_2[p]
                    else:
                        self.alpha_1[sequence_1] = alpha_1
                        self.alpha_2[sequence_1] = alpha_2
            # normalized all the score with number of sequences in calculation -1  because sequence i is not calculated score with itself
            for p in range(len(self.alpha_1[sequence_1])):
                self.alpha_1[sequence_1][p] = self.alpha_1[sequence_1][p]/(N-1)
                self.alpha_2[sequence_1][p] = self.alpha_2[sequence_1][p]/(N-1)
            #bins the score into 30 bins
            span = 1
            bin_width = 1/30
            bins = 30
            bin_points=[]
            upper = 1
            lower = 0
            Total_count = 0
            for a in range(bins+1):
                bin_points.append(lower+ a*bin_width)
            Z_value = [[0 for n in range(bins+1)] for j in range(bins+1)]
            
            #created a matrix for PS and US
            X = [i for i in self.alpha_1[sequence_1]]
            Y = [i for i in self.alpha_2[sequence_1]]
            for k, m  in zip(X,Y):    
                index_X = floor((k-lower)/span*bins)
                index_Y = floor((m-lower)/span*bins)
                if k == upper:
                    if m ==upper:
                        Z_value[index_X-1][index_Y-1] += 1
                        Total_count += 1
                    else:
                        Z_value[index_X-1][index_Y] += 1
                        Total_count += 1
                else:
                    if m ==upper:
                        Z_value[index_X][index_Y-1] += 1
                        Total_count += 1
                    else:
                        Z_value[index_X][index_Y] += 1
                        Total_count += 1
            Z_value_final = []
            Z_value_heatmap = [[0 for n in range(bins+1)] for j in range(bins+1)]
            for i in range(len(Z_value)):
                for j in range(len(Z_value)):
                    Z_value_heatmap[i][j] = Z_value[i][j]/Total_count*100
            self.heatmap[sequence_1] = Z_value_heatmap
            #finished the mtraix
            for o in range(len(Z_value)-1):
                for p in range(len(Z_value)-1-o):
                    Z_value_final.append(Z_value[o][p])
            
            self.Z_value[sequence_1] = Z_value_final
    
    
    def get_pairwise(self, seq1, seq2):
        """ seq1 is the name of frist sequence,seq 2 is the name of second sequence. 
        The function randomly pick two sequence from
        the aliment file and compare the alignment.
        Arguments:
            seq1 {str}:
                the sequence randomly picked by the random pick function, or
                manually given
            
            seq2 {str}:
                 the sequnece randomly picked by the random pick function, or
                manually given, make sure not the same as the sequence 1
        
        Returns: Pairwise: a dicitonary have the sequence 1 's aligned 
                           base pair's position in seuqence 2. so as the sequence 2
                 Pair_i:   a dicitonary have the map of sequence 1 and seuqence 2.
                           No - in the sqeuence.
        """
        #initialize for Pairwise and Pair_i
        Pairwise=dict()
        Pair_i=dict()
        #Error_Check, will report if the seq1 and seq2 are exist or not
        try:
            Seq1_a=self.algn[seq1]
        except:
            print("no seq1")
            return
        try:
            Seq2_a=self.algn[seq2]
        except:
            print("no seq2")
            return
        #get rid of the space at the end so that we can have the true sequence
        Seq1_b= (Seq1_a.strip())
        Seq2_b=(Seq2_a.strip())
        #initialize a list for poisitions of basepair in sequence
        j=0
        k=0
        Seq1_c=list()
        Seq2_c=list()
        Seq1_m=list()
        Seq2_m=list()
        #the for loop will go thourgh all the position of the sequence
        #and put the aligned base pair into the dictionary
        #so as the poisiton information for each sequence to Pair_i
        for i in range(len(Seq1_b)):
            if Seq1_b[i]!='-':
                j+=1
            
            if Seq2_b[i]!='-':
                k+=1
            
            if Seq1_b[i] =='-':
                   Seq1_c.append(0)
            else:
                if Seq2_b[i]!='-':
                    Seq1_c.append(k)
                
                else:
                    Seq1_c.append(0)
                
                
                Seq1_m.append(i)
            
            if Seq2_b[i] =='-':
                    Seq2_c.append(0)
            
            else:
                if Seq1_b[i]!='-':
                    Seq2_c.append(j)                   
                else:
                    Seq2_c.append(0)
                
                Seq2_m.append(i)
        
        Pairwise[seq2] = Seq2_c
        Pairwise[seq1] = Seq1_c
        Pair_i[seq2] = Seq2_m
        Pair_i[seq1] = Seq1_m
        
        return Pairwise, Pair_i 
    def enf2_feature(self):
        '''calcualte folding free energy by efn2'''
        Seq_name = [i for i in self.algn.keys()]
        for i in range(len(self.algn.keys())):
            ct = self.Seqname_dict[str(i+1)]['CT_file']
            subprocess.call(["efn2",ct,'foo.efn2'],env=my_env)
            e_file = open ('foo.efn2','r')
            os.remove('foo.efn2')
            for line in e_file:
                energy = line.split('=')[-1]
                energy = energy.split('±')[0]
                self.efn2[Seq_name[i]] = float(energy)
    def decoy_identify(self):
            '''add all the feature together,and identify the decoy sequences'''
            Seq_name = [i for i in self.algn.keys()]
            self.enf2_feature()
            # hyper feature will be the final output
            hyper_feature=[]
            for i in range(len(Seq_name)):
                feature_list = []
                target_count = self.Z_value[Seq_name[i]]
                #sequence_length is the sum of counts across the matrix
                sequence_length = sum(target_count)
                #initiate pseudo count for KL score
                pseduco_m=[0 for k in target_count]
                counts_rest = [0 for k in target_count]
                pseduco_rest = [0 for k in target_count]
                #get the count from match score(PS and US) matrix from Z dictionary, which initiated at beginning
                for m in range(len(Seq_name)):
                    if m !=i:
                        for counts in range(len(target_count)):
                            counts_rest[counts] += self.Z_value[Seq_name[m]][counts]/(len(self.algn.keys())-1)
                sequence_length_rest = sum(counts_rest)
                # calculate pseudo count for KL score and pseudo count here is 1/sequence length
                for counts in range(len(target_count)):
                    pseduco_m[counts] += (target_count[counts]+1/sequence_length)/sequence_length
                    pseduco_rest[counts] += (counts_rest[counts]+1/sequence_length_rest)/sequence_length_rest
                KL_Score = 0
                for k in range(len(pseduco_m)):
                    KL_Score += pseduco_m[k]*np.log(pseduco_m[k]/pseduco_rest[k])
                
                feature_list.append(KL_Score)
                # get folding free energy into hyper feature
                energy_list = []
                energy_total = 0
                for m in range(len(Seq_name)):
                    if i != m:
                        energy_total += float(self.efn2[Seq_name[m]])
                        energy_list.append(self.efn2[Seq_name[m]])
                efn2_mean = energy_total/(len(self.algn.keys())-1)
                efn2_standard_distrubution = np.std(energy_list)
                z_score = (self.efn2[Seq_name[i]]-efn2_mean)/efn2_standard_distrubution
                feature_list.append(z_score)
                # get structure shannon entropy to hyper feature
                pfs_file = self.Seqname_dict[str(i+1)]['Save_file']
                subprocess.call(["ProbabilityPlot",pfs_file,'foo.pp','--text'],env=my_env)
                
                pp_data = open('foo.pp',"r").readlines()
                shannon_entropy = 0
                for line in pp_data:
                    na = line.split("\t")
                    if len(na) == 1:
                        sequence_length = float(na[0].rstrip())
                    if len(na) == 3:
                        if na[0] != "i":
                            probability_log = -float(na[2].rstrip())
                            probability = 10**(probability_log)
                            shannon_entropy += -(probability*probability_log)
                shannon_entropy = shannon_entropy/sequence_length
                os.remove('foo.pp')
                feature_list.append(shannon_entropy)
                # get alignment shannon entropy to hyper feature
                aligment_entropy = aligment_shannon_entropy(self.algn_path)
                feature_list.append(aligment_entropy[Seq_name[i]])
                
                # get first run structure shannon entropy to hyper feature
                pfs_file_s = self.Seqname_dict[str(i+1)]['StartingSaveFiles']
                subprocess.call(["ProbabilityPlot",pfs_file_s,'foo.pp','--text'],env=my_env)
                
                pp_data = open('foo.pp',"r").readlines()
                shannon_entropy_s = 0
                for line in pp_data:
                    na = line.split("\t")
                    if len(na) == 1:
                        sequence_length_s = float(na[0].rstrip())
                    if len(na) == 3:
                        if na[0] != "i":
                            probability_log = -float(na[2].rstrip())
                            probability = 10**(probability_log)
                            shannon_entropy_s += -(probability*probability_log)
                shannon_entropy_s = shannon_entropy_s/sequence_length_s
                os.remove('foo.pp')
                feature_list.append(shannon_entropy_s-shannon_entropy)
                feature_list.append(shannon_entropy_s)
                hyper_feature.append(feature_list)
                
            detect =0
            #identify if the sequences are decoy or not
            identify = Adaclassifer_model.decision_function(hyper_feature)
            self.identify = identify
            self.hyper_feature = hyper_feature
            print("Decoys:")
            for kn in range(len(hyper_feature)):
                # threshold will be determine by the FPR that user wanted and deafult will be 0.05.
                if identify[kn] >= self.threshold[self.FPR_T.index(min(self.FPR_T,key=lambda x:abs(x-float(self.FPR))))]:
                    print(Seq_name[kn])
                    detect +=1
            if detect == 0:
                print('no decoy detected')
                

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(prog='DecoyFinder',description='DecoyFinder identify decoy sequences from a set of homologous sequences calculated in TurboFold')
    parser.add_argument('conf_file', help='configure file directory of TurboFold')
    parser.add_argument('--smp',required = False, help= 'This option is used when TurboFold is not yet run, and TurboFold should be run in parallel.')
    parser.add_argument('--FPR',required = False, help = '1- specificity or false positive rate, user can set and default is 0.05')
    args = parser.parse_args()
    DecoyFinder(conf_file=args.conf_file,smp=args.smp,FPR=args.FPR)
